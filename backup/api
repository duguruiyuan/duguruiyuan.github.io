<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
    <meta http-equiv='X-UA-Compatible' content='IE=11' />
    <title>API 文档 | Ping++</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href='api/css/base.css' rel='stylesheet' />
    <link href='api/css/style.css' rel='stylesheet' />
    <link href='api/css/railscasts.css' rel='stylesheet' />
  </head>
  <body>
    <!--START--><div id='app'><div class="container unlimiter" data-reactroot="" data-reactid="1" data-react-checksum="-1874588620"><div class="fixed-top fixed-right space-left20" data-reactid="2"><div class="fill-dark col6 pin-right" data-reactid="3"></div></div><div class="space-top5 scroll-styled overflow-auto pad1 width20 sidebar fixed-left fill-light light" data-reactid="4"><div class="pad0x small" data-reactid="5"><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="6">简介</div><a href="#api-文档简介" class="nav-item block " data-reactid="7">API 文档简介</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="8">基础</div><a href="#认证" class="nav-item block " data-reactid="9">认证</a><a href="#错误" class="nav-item block " data-reactid="10">错误</a><a href="#分页" class="nav-item block " data-reactid="11">分页</a><a href="#可展开对象" class="nav-item block " data-reactid="12">可展开对象</a><a href="#元数据" class="nav-item block " data-reactid="13">元数据</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="14">交易</div><a href="#charges-支付" class="nav-item block " data-reactid="15">Charges 支付</a><a href="#refunds-退款" class="nav-item block " data-reactid="16">Refunds 退款</a><a href="#batch-refunds-批量退款" class="nav-item block " data-reactid="17">Batch Refunds 批量退款</a><a href="#red-envelopes-红包" class="nav-item block " data-reactid="18">Red Envelopes 红包</a><a href="#transfers-企业付款" class="nav-item block " data-reactid="19">Transfers 企业付款</a><a href="#batch-transfers-批量企业付款" class="nav-item block " data-reactid="20">Batch Transfers 批量企业付款</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="21">辅助接口</div><a href="#身份证银行卡信息认证接口" class="nav-item block " data-reactid="22">身份证银行卡信息认证接口</a><a href="#报关接口" class="nav-item block " data-reactid="23">报关接口</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="24">Webhooks 回调</div><a href="#events-事件" class="nav-item block " data-reactid="25">Events 事件</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="26">附录</div><a href="#支付渠道属性值" class="nav-item block " data-reactid="27">支付渠道属性值</a><a href="#支付渠道-extra-参数说明" class="nav-item block " data-reactid="28">支付渠道 extra 参数说明</a><a href="#企业付款-extra-参数说明" class="nav-item block " data-reactid="29">企业付款 extra 参数说明</a><a href="#易宝支付商品类型码" class="nav-item block " data-reactid="30">易宝支付商品类型码</a><a href="#易宝支付用户标识类型码" class="nav-item block " data-reactid="31">易宝支付用户标识类型码</a><a href="#银行编号说明" class="nav-item block " data-reactid="32">银行编号说明</a><a href="#认证接口-result_code-说明" class="nav-item block " data-reactid="33">认证接口 result_code 说明</a><a href="#海关编号说明" class="nav-item block " data-reactid="34">海关编号说明</a><div class="small pad0x quiet space-top1 nav-section-name" data-reactid="35">API更新</div><a href="#api-更新日志" class="nav-item block " data-reactid="36">API 更新日志</a></div></div><div class="space-left20" data-reactid="37"><div class="" data-reactid="38"><div class="clearfix" data-reactid="39"><div data-title="API 文档简介" class="keyline-top section contain clearfix " data-reactid="40"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="41"><h2 id="api-文档简介">API 文档简介</h2>
<p>Ping++ API 采用 REST 风格设计。所有接口请求地址都是可预期的以及面向资源的。使用规范的 HTTP 响应代码来表示请求结果的正确或错误信息。使用 HTTP 内置的特性，如 HTTP Authentication 和 HTTP 请求方法让接口易于理解。所有的 API 请求都会以规范友好的 JSON 对象格式返回（包括错误信息）。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="42"><h4 id="官方-sdk">官方 SDK</h4>
<blockquote>
<p>Ping++ 提供多语言多平台的 <a href="https://www.pingxx.com/docs/downloads">官方客户端和服务端 SDK</a>。</p>
</blockquote>
<h4 id="定义">定义</h4>
<div class='endpoint dark fill-blue round '>
      <div class='round-left pad0y pad1x fill-lighten0 code small endpoint-method'>GET</div>
      <div class='pad0 code small endpoint-url'>https://api.pingxx.com</div>
    </div>
</div></div><div data-title="认证" class="keyline-top section contain clearfix " data-reactid="43"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="44"><h2 id="认证">认证</h2>
<p>在调用 API 时，必须提供 API Key 作为每个请求的身份验证。你可以在管理平台内管理你的 API Key。API Key 是商户在 Ping++ 系统中的身份标识，请安全存储，确保其不要被泄露。如需获取或更新 API Key ，也可以在管理平台的「企业设置」->「开发设置」内进行<a href="https://help.pingxx.com/article/123152">操作</a>。</p>
<p>Ping++ API 使用 HTTP Basic Auth 进行认证。 将 API Key 作为 basic auth 的用户名。不需要填写密码。</p>
<p>API Key 分为 live 和 test 两种模式。分别对应真实交易环境和模拟测试交易环境并且可以实时切换。测试模式下的 API Key 会模拟交易等请求，但是不会产生任何真实交易行为和费用，便于调试和接入。 所有的 API 请求必须通过 HTTPS 发送，使用 HTTP 会被 Ping++ 服务器拒绝。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="45"><h4 id="请求示例">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<blockquote>
<p>请将示例中的 <code>sk_test_ibbTe5jLGCi5rzfH4OqPW9KC</code> 替换成你自己的 API Key。</p>
</blockquote>
</div></div><div data-title="错误" class="keyline-top section contain clearfix " data-reactid="46"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="47"><h2 id="错误">错误</h2>
<p>Ping++ API 使用 HTTP 状态码 (status code) 来表明一个 API 请求的成功或失败状态。返回 <code>HTTP 2XX</code> 表明 API 请求成功。返回 <code>HTTP 4XX</code> 表明在请求 API 时提供了错误信息，例如参数缺失、参数错误、支付渠道错误等。返回 <code>HTTP 5XX</code> 表明 API 请求时，Ping++ 服务器发生了错误。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="48"><h4 id="http-返回状态码">HTTP 返回状态码</h4>
<blockquote>
<table>
<thead>
<tr>
<th>状态码</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>200 - OK</td>
<td>一切正常。</td>
</tr>
<tr>
<td>400 - Bad Request</td>
<td>一般由缺失参数，参数格式不正确等引起。</td>
</tr>
<tr>
<td>401 - Unauthorized</td>
<td>没有提供正确的 API Key。</td>
</tr>
<tr>
<td>402 - Request Failed</td>
<td>参数格式正确但是请求失败，一般由业务错误引起。</td>
</tr>
<tr>
<td>403 - Forbidden</td>
<td>调用接口超过 Ping++ 套餐的并发限制，请
<a href="https://dashboard.pingxx.com/pricing">升级套餐</a>
或限流。</td>
</tr>
<tr>
<td>404 - Not Found</td>
<td>请求的资源不存在。</td>
</tr>
<tr>
<td>500, 502, 503, 504 - Server Errors</td>
<td>Ping++ 服务器出错。</td>
</tr>
</tbody>
</table>
</blockquote>
</div></div><div data-title="错误汇总" class="keyline-top section contain clearfix " data-reactid="49"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="50"><h3 id="错误汇总">错误汇总</h3>
<table>
<thead>
<tr>
<th><strong>返回属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>type</td>
<td>错误类型，可以是 
<code>invalid_request_error</code>
、
<code>api_error</code>
、
<code>channel_error</code>
 或 
<code>card_error</code>
。</td>
</tr>
<tr>
<td>message</td>
<td>返回具体的错误描述。</td>
</tr>
<tr>
<td>code 
<em>optional</em></td>
<td>错误码，由第三方支付渠道返回的错误代码。</td>
</tr>
<tr>
<td>param 
<em>optional</em></td>
<td>当发生参数错误时返回具体的参数名，如 id。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="51"><h4 id="错误类型-type">错误类型 (type)</h4>
<blockquote>
<table>
<thead>
<tr>
<th><strong>错误类型</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>invalid_request_error</td>
<td>请求错误，传入了不正确的地址，参数或值。</td>
</tr>
<tr>
<td>api_error</td>
<td>Ping++ 服务器出现的异常错误。</td>
</tr>
<tr>
<td>channel_error</td>
<td>第三方支付渠道出现的错误导致请求出现错误。通常你需要对这些可能出现的情况进行处理或者联系我们。</td>
</tr>
</tbody>
</table>
</blockquote>
<h4 id="错误码-code">错误码 (code)</h4>
<blockquote>
<table>
<thead>
<tr>
<th>错误码</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>charge_closed</td>
<td>支付订单已结束，不能进行后续操作。</td>
</tr>
<tr>
<td>charge_unexpected_status</td>
<td>支付返回意外的状态码。</td>
</tr>
<tr>
<td>refund_wait_operation</td>
<td>退款需要等待用户进一步操作。</td>
</tr>
<tr>
<td>refund_refused</td>
<td>退款失败，被支付渠道拒绝。</td>
</tr>
<tr>
<td>refund_retry</td>
<td>退款失败，需要重新发起退款。</td>
</tr>
<tr>
<td>refund_manual_intervention</td>
<td>退款失败，需要通过线下或转账进行退款。</td>
</tr>
<tr>
<td>refund_unexpected_status</td>
<td>退款返回意外的状态码。</td>
</tr>
<tr>
<td>channel_connection_error</td>
<td>支付渠道通讯异常。</td>
</tr>
<tr>
<td>channel_request_error</td>
<td>请求支付渠道接口失败。</td>
</tr>
<tr>
<td>channel_parse_error</td>
<td>支付渠道返回意外的数据格式发生的解析错误。</td>
</tr>
<tr>
<td>channel_sign_error</td>
<td>支付渠道返回的数据没有通过签名验证。</td>
</tr>
</tbody>
</table>
</blockquote>
</div></div><div data-title="分页" class="keyline-top section contain clearfix " data-reactid="52"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="53"><h2 id="分页">分页</h2>
<p>所有的 Ping++ 资源都可以被 list API 方法支持，例如分页 <code>charges</code> 和 <code>refunds</code>。这些 list API 方法拥有相同的数据结构。Ping++ 是基于 <code>cursor</code> 的分页机制，使用参数 <code>starting_after</code> 来决定列表从何处开始，使用参数 <code>ending_before</code> 来决定列表从何处结束。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>limit 
<em>optional</em></td>
<td>限制每页可以返回多少对象，限制范围是从 1-20 项，默认是 10 项。</td>
</tr>
<tr>
<td>starting_after 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_end</code>
，你可以使用 
<code>starting_after</code>
 = 
<code>obj_end</code>
 去获取下一页。</td>
</tr>
<tr>
<td>ending_before 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_start</code>
，你可以使用 
<code>ending_before</code>
 = 
<code>obj_start</code>
 去获取上一页。</td>
</tr>
<tr>
<td>created 
<em>optional</em></td>
<td>对象的创建时间，用 Unix 时间戳表示。具体参考下表 
<code>created</code>
 参数。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>created</code> 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>created
[
gt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
gte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于或等于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于或等于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>返回</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "list"</td>
</tr>
<tr>
<td>url 
<em>string</em></td>
<td>表明获取该列表所使用的 URL。</td>
</tr>
<tr>
<td>has_more 
<em>boolean</em></td>
<td>表明获取列表之后是否还有更多的元素实体。如果值为 
<code>false</code>
，表明当前页是最后一页。</td>
</tr>
<tr>
<td>data 
<em>array</em></td>
<td>包含一个由请求参数分页后的返回元素实体。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="54"><h4 id="请求示例-1">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/?<span class="hljs-built_in">limit</span>=3 \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges"</span>,
  <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"data"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_Hm5uTSifDOuTy9iLeLPSurrD"</span>,
      <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>,
      <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410767648</span>,
      <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
      <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">false</span>,
      <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>,
      <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
      <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
      <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789012"</span>,
      <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>,
      <span class="hljs-attr">"amount"</span>: <span class="hljs-number">900</span>,
      <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">0</span>,
      <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
      <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
      <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
      <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1410771248</span>,
      <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"refunds"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
        <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_Hm5uTSifDOuTy9iLeLPSurrD/refunds"</span>,
        <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">"data"</span>: [ ]
      },
      <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>,
      <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"metadata"</span>: {},
      <span class="hljs-attr">"credential"</span>: {},
      <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
    }
  ]
}</pre>
</div></div><div data-title="可展开对象" class="keyline-top section contain clearfix " data-reactid="55"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="56"><h2 id="可展开对象">可展开对象</h2>
<p>Ping++ 内有很多对象包含了其他对象的 <code>id</code>，如果这些对象带有 <strong>expandable</strong> 展开特性，你可以在请求参数后加入额外的展开参数来展开子对象。例如在创建 <code>charge</code> 对象时，使用 <code>expand[]=app</code> 参数来展开返回 <code>charge</code> 对象内部的 <code>app</code> 对象。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="57"><h4 id="请求示例-2">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/ch_Hm5uTS<span class="hljs-keyword">if</span>DOuTy9iLeLPSurrD?expand[]=app \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
</div></div><div data-title="元数据" class="keyline-top section contain clearfix " data-reactid="58"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="59"><h2 id="元数据">元数据</h2>
<p>一些 Ping++ 对象支持加入用户指定的 <code>metadata</code> 参数。你可以使用键值对的形式来构建自己的 <code>metadata</code>，例如 <code>metadata[color] = red</code>，你可以在每一个 <code>charge</code> 对象中加入订单的一些详情，如颜色、型号等属性，在查询时获得更多信息。每一个对象的 <code>metadata</code> 最多可以拥有 10 个键值对，数据总长度在 1000 个 Unicode 字符以内。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>phone_number  
<em>optional,string</em></td>
<td>手机号(11位)。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="60"><h4 id="请求示例-3">请求示例</h4>
<pre class='hljs'>  curl https://api.pingxx.com/v1/charges \
  -u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
  <span class="hljs-_">-d</span> order_no=123456789 \
  <span class="hljs-_">-d</span> amount=100 \
  <span class="hljs-_">-d</span> app[id]=app_1Gqj58ynP0mHeX1q \
  <span class="hljs-_">-d</span> channel=upacp \
  <span class="hljs-_">-d</span> currency=cny \
  <span class="hljs-_">-d</span> client_ip=127.0.0.1 \
  <span class="hljs-_">-d</span> subject=<span class="hljs-string">"Your Subject"</span> \
  <span class="hljs-_">-d</span> body=<span class="hljs-string">"Your Body"</span> \
  <span class="hljs-_">-d</span> metadata[color]=red
  <span class="hljs-_">-d</span> metadata[phone_number]=13918651111</pre>
<h4 id="返回示例-1">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-string">"id"</span>: <span class="hljs-string">"ch_Hm5uTSifDOuTy9iLeLPSurrD"</span>,
  <span class="hljs-string">"object"</span>: <span class="hljs-string">"charge"</span>,
  <span class="hljs-string">"created"</span>: 1410775686,
  <span class="hljs-string">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-string">"paid"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-string">"refunded"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-string">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-string">"channel"</span>: <span class="hljs-string">"upacp"</span>,
  <span class="hljs-string">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-string">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>,
  <span class="hljs-string">"amount"</span>: 100,
  <span class="hljs-string">"amount_settle"</span>: 0,
  <span class="hljs-string">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-string">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-string">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-string">"time_expire"</span>: 1410779286,
  <span class="hljs-string">"time_settle"</span>: null,
  <span class="hljs-string">"transaction_no"</span>: null,
  <span class="hljs-string">"refunds"</span>: {
    <span class="hljs-string">"object"</span>: <span class="hljs-string">"list"</span>,
    <span class="hljs-string">"url"</span>: <span class="hljs-string">"/v1/charges/ch_Hm5uTSifDOuTy9iLeLPSurrD/refunds"</span>,
    <span class="hljs-string">"has_more"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-string">"data"</span>: []
  },
  <span class="hljs-string">"amount_refunded"</span>: 0,
  <span class="hljs-string">"failure_code"</span>: null,
  <span class="hljs-string">"failure_msg"</span>: null,
  <span class="hljs-string">"metadata"</span>: {
    <span class="hljs-string">"color"</span>: <span class="hljs-string">"red"</span>,
    <span class="hljs-string">"phone_number"</span>: <span class="hljs-string">"13918651111"</span>
  },
  <span class="hljs-string">"credential"</span>: {
    <span class="hljs-string">"object"</span>: <span class="hljs-string">"credential"</span>,
    <span class="hljs-string">"upacp"</span>: {
      <span class="hljs-string">"tn"</span>: <span class="hljs-string">"201409151808060000000"</span>,
      <span class="hljs-string">"mode"</span>: <span class="hljs-string">"01"</span>
    }
  },
  <span class="hljs-string">"description"</span>: null
}</pre>
</div></div><div data-title="Charges 支付" class="keyline-top section contain clearfix " data-reactid="61"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="62"><h2 id="charges-支付">Charges 支付</h2>
<p>你可以创建一个 <code>charge</code> 对象向用户收款。 charge 是一个支付凭据对象，所有和支付相关的要素信息都存储在这个对象中，你的服务端可以通过发起支付请求来创建一个新的 <code>charge</code> 对象，也可以随时查询一个或者多个 <code>charge</code> 对象的状态。每个 <code>charge</code> 对象都拥有一个标识 <code>id</code>，该 <code>id</code> 在 Ping++ 系统内唯一。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>由 Ping++ 生成的支付对象 ID，
<code>27</code>
 位字符串。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "charge"。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>支付创建时的 Unix 时间戳。</td>
</tr>
<tr>
<td>livemode 
<em>boolean</em></td>
<td>是否处于 
<code>live</code>
 模式。</td>
</tr>
<tr>
<td>paid 
<em>boolean</em></td>
<td>是否已付款。</td>
</tr>
<tr>
<td>refunded 
<em>boolean</em></td>
<td>是否存在退款信息，无论退款是否成功。</td>
</tr>
<tr>
<td>app 
<strong>expandable</strong>
 
<em>string</em></td>
<td>支付使用的 
<code>app</code>
 对象的 
<code>id</code>
，expandable 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>string</em></td>
<td>支付使用的第三方支付渠道，详情参考 
<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">支付渠道属性值</a>
。</td>
</tr>
<tr>
<td>order_no 
<em>string</em></td>
<td>商户订单号，适配每个渠道对此参数的要求，必须在商户系统内唯一。(
<code>alipay</code>
: 1-64 位， 
<code>wx</code>
: 2-32 位，
<code>bfb</code>
: 1-20 位，
<code>upacp</code>
: 8-40 位，
<code>yeepay_wap</code>
:1-50 位，
<code>jdpay_wap</code>
:1-30 位，
<code>qpay</code>
:1-30 位，
<code>cmb_wallet</code>
:10 位纯数字字符串。注：除 
<code>cmb_wallet</code>
 外的其他渠道推荐使用 8-20 位，要求数字或字母，不允许特殊字符)。</td>
</tr>
<tr>
<td>client_ip 
<em>ip address</em></td>
<td>发起支付请求客户端的 IP 地址，格式为 IPv4 整型，如 127.0.0.1。</td>
</tr>
<tr>
<td>amount 
<em>int</em></td>
<td>订单总金额（必须大于0），单位为对应币种的最小货币单位，人民币为分。如订单总金额为 1 元，
<code>amount</code>
 为 100，么么贷商户请查看申请的借贷金额范围。</td>
</tr>
<tr>
<td>amount_settle 
<em>int</em></td>
<td>清算金额，单位为对应币种的最小货币单位，人民币为分。</td>
</tr>
<tr>
<td>currency 
<em>string</em></td>
<td>3 位 ISO 货币代码，人民币为 
<code>cny</code>
。</td>
</tr>
<tr>
<td>subject 
<em>string</em></td>
<td>商品标题，该参数最长为 32 个 Unicode 字符，银联全渠道（
<code>upacp</code>
/
<code>upacp_wap</code>
）限制在 32 个字节。</td>
</tr>
<tr>
<td>body 
<em>string</em></td>
<td>商品描述信息，该参数最长为 128 个 Unicode 字符，
<code>yeepay_wap</code>
 对于该参数长度限制为 100 个 Unicode 字符。</td>
</tr>
<tr>
<td>extra 
<em>object</em></td>
<td>特定渠道发起交易时需要的额外参数，以及部分渠道支付成功返回的额外参数，详细参考
<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">支付渠道 extra 参数说明</a>
。</td>
</tr>
<tr>
<td>time_paid 
<em>timestamp</em></td>
<td>订单支付完成时的 Unix 时间戳。（银联支付成功时间为接收异步通知的时间）</td>
</tr>
<tr>
<td>time_expire 
<em>timestamp</em></td>
<td>订单失效时的 Unix 时间戳。时间范围在订单创建后的 1 分钟到 15 天，默认为 1 天，创建时间以 Ping++ 服务器时间为准。 微信对该参数的有效值限制为 2 小时内；银联对该参数的有效值限制为 1 小时内。</td>
</tr>
<tr>
<td>time_settle 
<em>timestamp</em></td>
<td>订单清算时间，用 Unix 时间戳表示。（仅针对个人开发者）</td>
</tr>
<tr>
<td>transaction_no 
<em>string</em></td>
<td>支付渠道返回的交易流水号。</td>
</tr>
<tr>
<td>refunds 
<em>list</em></td>
<td>退款详情列表，详见 
<a href="#refunds-%E9%80%80%E6%AC%BE">Refunds 退款</a>
。</td>
</tr>
<tr>
<td>amount_refunded 
<em>int</em></td>
<td>已退款总金额，单位为对应币种的最小货币单位，例如：人民币为分。</td>
</tr>
<tr>
<td>failure_code 
<em>string</em></td>
<td>订单的错误码，详见 
<a href="#%E9%94%99%E8%AF%AF">错误</a>
中的错误码描述。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>订单的错误消息的描述。</td>
</tr>
<tr>
<td>metadata 
<em>hash</em></td>
<td>详见 
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>credential 
<em>object</em></td>
<td>支付凭证，用于客户端发起支付。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>订单附加说明，最多 255 个 Unicode 字符。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="63"><h4 id="对象示例">对象示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_Hm5uTSifDOuTy9iLeLPSurrD"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410778843</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-attr">"extra"</span>:{},
  <span class="hljs-attr">"time_paid"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1410782443</span>,
  <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"refunds"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_Hm5uTSifDOuTy9iLeLPSurrD/refunds"</span>,
    <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"data"</span>: []
  },
  <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>,
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"credential"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"credential"</span>,
    <span class="hljs-attr">"upacp"</span>: {
      <span class="hljs-attr">"tn"</span>: <span class="hljs-string">"201409151900430000000"</span>,
      <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"01"</span>
    }
  },
  <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="创建 Charge 对象" class="keyline-top section contain clearfix " data-reactid="64"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="65"><h3 id="创建-charge-对象">创建 Charge 对象</h3>
<p>发起一次支付请求时需要创建一个新的 <code>charge</code> 对象，获取一个可用的支付凭据用于客户端向第三方渠道发起支付请求。如果使用测试模式的 API Key，则不会发生真实交易。当支付成功后，Ping++ 会发送 Webhooks 通知。</p>
<table>
<thead>
<tr>
<th>请求参数</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>order_no 
<strong>required</strong></td>
<td>商户订单号，适配每个渠道对此参数的要求，必须在商户系统内唯一。(
<code>alipay</code>
: 1-64 位， 
<code>wx</code>
: 2-32 位，
<code>bfb</code>
: 1-20 位，
<code>upacp</code>
: 8-40 位，
<code>yeepay_wap</code>
:1-50 位，
<code>jdpay_wap</code>
:1-30 位，
<code>qpay</code>
:1-30 位，
<code>cmb_wallet</code>
:10 位纯数字字符串。注：除 
<code>cmb_wallet</code>
 外的其他渠道推荐使用 8-20 位，要求数字或字母，不允许特殊字符)。</td>
</tr>
<tr>
<td>app
[
id
]
 
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>支付使用的 
<code>app</code>
 对象的 
<code>id</code>
，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<strong>required</strong></td>
<td>支付使用的第三方支付渠道。参考 
<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">支付渠道属性值</a>
。</td>
</tr>
<tr>
<td>amount 
<strong>required</strong></td>
<td>订单总金额（必须大于0），单位为对应币种的最小货币单位，人民币为分。如订单总金额为 1 元，
<code>amount</code>
 为 100，么么贷商户请查看申请的借贷金额范围。</td>
</tr>
<tr>
<td>client_ip 
<strong>required</strong></td>
<td>发起支付请求客户端的 IPv4 地址，如: 127.0.0.1。</td>
</tr>
<tr>
<td>currency 
<strong>required</strong></td>
<td>三位 ISO 货币代码，目前仅支持人民币 
<code>cny</code>
。</td>
</tr>
<tr>
<td>subject 
<strong>required</strong></td>
<td>商品的标题，该参数最长为 32 个 Unicode 字符，银联全渠道（
<code>upacp</code>
/
<code>upacp_wap</code>
）限制在 32 个字节。</td>
</tr>
<tr>
<td>body 
<strong>required</strong></td>
<td>商品的描述信息，该参数最长为 128 个 Unicode 字符，yeepay_wap 对于该参数长度限制为 100 个 Unicode 字符。</td>
</tr>
<tr>
<td>extra 
<em>optional</em></td>
<td>特定渠道发起交易时需要的额外参数，以及部分渠道支付成功返回的额外参数，详细参考
<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">支付渠道 extra 参数说明</a>
。</td>
</tr>
<tr>
<td>time_expire 
<em>optional</em></td>
<td>订单失效时间，用 Unix 时间戳表示。时间范围在订单创建后的 1 分钟到 15 天，默认为 1 天，创建时间以 Ping++ 服务器时间为准。 微信对该参数的有效值限制为 2 小时内；银联对该参数的有效值限制为 1 小时内。</td>
</tr>
<tr>
<td>metadata 
<em>optional</em></td>
<td>参考 
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>description 
<em>optional</em></td>
<td>订单附加说明，最多 255 个 Unicode 字符。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个支付凭据 <code>charge</code> 对象。鉴于支付渠道对 <code>order_no</code> 的合法性要求，为了保证支付请求的正确处理，请务必保证对于同一支付渠道下，不同支付产品间 <code>order_no</code> 的唯一性。例如：已在微信公众号下使用的 <code>order_no</code> 则无法在微信支付以及微信公众号扫码下重复使用，该规则同样适用于其他同类渠道。如果发生错误，则会返回错误码和错误详情，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="66"><h4 id="定义-1">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/charges</pre>
<h4 id="请求示例-4">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> order_no=123456789 \
<span class="hljs-_">-d</span> amount=100 \
<span class="hljs-_">-d</span> app[id]=app_1Gqj58ynP0mHeX1q \
<span class="hljs-_">-d</span> channel=upacp \
<span class="hljs-_">-d</span> currency=cny \
<span class="hljs-_">-d</span> client_ip=127.0.0.1 \
<span class="hljs-_">-d</span> subject=<span class="hljs-string">"Your Subject"</span> \
<span class="hljs-_">-d</span> body=<span class="hljs-string">"Your Body"</span></pre>
<h4 id="返回示例-2">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410834527</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-attr">"extra"</span>:{},
  <span class="hljs-attr">"time_paid"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1410838127</span>,
  <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"refunds"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds"</span>,
    <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
    <span class="hljs-attr">"data"</span>: [ ]
  },
  <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>,
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"credential"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"credential"</span>,
    <span class="hljs-attr">"upacp"</span>: {
      <span class="hljs-attr">"tn"</span>: <span class="hljs-string">"201409161028470000000"</span>,
      <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"01"</span>
    }
  },
  <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="查询 Charge 对象" class="keyline-top section contain clearfix " data-reactid="67"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="68"><h3 id="查询-charge-对象">查询 Charge 对象</h3>
<p>你可以在后台异步通知之前，通过查询接口确认支付状态。通过<code>charge</code>对象的<code>id</code>查询一个已创建的<code>charge</code>对象。</p>
<table>
<thead>
<tr>
<th>请求参数</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id  
<strong>required</strong></td>
<td>查询的 
<code>charge</code>
 对象 
<code>id</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>charge</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="69"><h4 id="定义-2">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/charges/{CHARGE_ID}</pre>
<h4 id="请求示例-5">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4 \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-3">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>, 
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>, 
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410834527</span>, 
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>, 
  <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">false</span>, 
  <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>, 
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>, 
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>, 
  <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>, 
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>, 
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>, 
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>, 
  <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-attr">"extra"</span>:{},
  <span class="hljs-attr">"time_paid"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1410838127</span>, 
  <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>, 
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>, 
  <span class="hljs-attr">"refunds"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>, 
    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds"</span>, 
    <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>, 
    <span class="hljs-attr">"data"</span>: [ ]
  }, 
  <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>, 
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>, 
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>, 
  <span class="hljs-attr">"metadata"</span>: {}, 
  <span class="hljs-attr">"credential"</span>: {
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"credential"</span>, 
    <span class="hljs-attr">"upacp"</span>: {
      <span class="hljs-attr">"tn"</span>: <span class="hljs-string">"201409161028470000000"</span>, 
      <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"01"</span>
    }
  }, 
  <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="查询 Charge 对象列表" class="keyline-top section contain clearfix " data-reactid="70"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="71"><h3 id="查询-charge-对象列表">查询 Charge 对象列表</h3>
<p>返回之前创建过 <code>charge</code> 对象的一个列表。列表是按创建时间进行排序，总是将最新的 <code>charge</code> 对象显示在最前。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>limit 
<em>optional</em></td>
<td>限制有多少对象可以被返回，限制范围是从 1-20 项，默认是 10 项。</td>
</tr>
<tr>
<td>starting_after 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_end</code>
，你可以使用 
<code>starting_after</code>
 = 
<code>obj_end</code>
 去获取下一页。</td>
</tr>
<tr>
<td>ending_before 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_start</code>
，你可以使用 
<code>ending_before</code>
 = 
<code>obj_start</code>
 去获取上一页。</td>
</tr>
<tr>
<td>created 
<em>optional</em></td>
<td>对象的创建时间，用 Unix 时间戳表示。具体参考下表 
<code>created</code>
 参数。</td>
</tr>
<tr>
<td>app
[
id
]
  
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>支付使用的 
<code>app</code>
 对象的 
<code>id</code>
，expandable 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>optional</em></td>
<td>支付使用的支付渠道。参考 
<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">支付渠道属性值</a>
。</td>
</tr>
<tr>
<td>paid 
<em>optional</em></td>
<td>是否已付款。</td>
</tr>
<tr>
<td>refunded 
<em>optional</em></td>
<td>是否存在退款信息，无论退款是否成功。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>created</code> 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>created
[
gt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
gte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于或等于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于或等于 
<code>charge</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 charge 对象列表或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="72"><h4 id="定义-3">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/charges?expand[]=app</pre>
<h4 id="请求示例-6">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/?<span class="hljs-built_in">limit</span>=3&amp;expand[]=app \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-4">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges"</span>,
  <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"data"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>, 
      <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>, 
      <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410834527</span>, 
      <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>, 
      <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">false</span>, 
      <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>, 
      <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>, 
      <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
      <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>, 
      <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>, 
      <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>, 
      <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>, 
      <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
      <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
      <span class="hljs-attr">"extra"</span>:{},
      <span class="hljs-attr">"time_paid"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1410838127</span>, 
      <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>, 
      <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>, 
      <span class="hljs-attr">"refunds"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>, 
        <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds"</span>, 
        <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>, 
        <span class="hljs-attr">"data"</span>: [ ]
      }, 
      <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>, 
      <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>, 
      <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>, 
      <span class="hljs-attr">"metadata"</span>: {}, 
      <span class="hljs-attr">"credential"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"credential"</span>, 
        <span class="hljs-attr">"upacp"</span>: {
          <span class="hljs-attr">"tn"</span>: <span class="hljs-string">"201409161028470000000"</span>, 
          <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"01"</span>
        }
      }, 
      <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
    }
  ]
}</pre>
</div></div><div data-title="Refunds 退款" class="keyline-top section contain clearfix " data-reactid="73"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="74"><h2 id="refunds-退款">Refunds 退款</h2>
<p><code>refund</code> 对象允许你可以对已经支付的 <code>charge</code> 对象发起退款请求。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>退款对象 
<code>id</code>
 ，由 Ping++ 生成，27 位长度字符串。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "refund"。</td>
</tr>
<tr>
<td>order_no 
<em>string</em></td>
<td>退款的订单号，由 Ping++ 生成。</td>
</tr>
<tr>
<td>amount 
<em>int</em></td>
<td>退款金额大于0，单位为对应币种的最小货币单位，例如：人民币为分（如退款金额为 1 元，此处请填 100）。</td>
</tr>
<tr>
<td>succeed 
<em>boolean</em></td>
<td>退款是否成功。</td>
</tr>
<tr>
<td>status 
<em>string</em></td>
<td>退款状态（目前支持三种状态: pending: 处理中; succeeded: 成功; failed: 失败）。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>退款创建的时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>time_succeed 
<em>timestamp</em></td>
<td>退款成功的时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>退款详情，最多 255 个 Unicode 字符。</td>
</tr>
<tr>
<td>failure_code 
<em>string</em></td>
<td>退款的错误码，详见
<a href="#%E9%94%99%E8%AF%AF">错误</a>
中的错误码。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>退款消息的描述。</td>
</tr>
<tr>
<td>metadata 
<em>hash</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>charge 
<em>string</em></td>
<td>refund 对象的所在 
<code>charge</code>
 对象的 
<code>id</code>
 。</td>
</tr>
<tr>
<td>charge_order_no 
<em>string</em></td>
<td>商户订单号，这边返回的是 
<code>charge</code>
 对象中的 
<code>order_no</code>
 参数。</td>
</tr>
<tr>
<td>transaction_no 
<em>string</em></td>
<td>支付渠道返回的交易流水号，部分渠道返回该字段为空。</td>
</tr>
<tr>
<td>funding_source  
<em>string</em></td>
<td>退款资金来源。取值范围："unsettled_funds"：使用未结算资金退款；"recharge_funds"：使用可用余额退款。注：默认值"unsettled_funds"，该参数仅适用于微信渠道，包括 
<code>wx</code>
 , 
<code>wx_pub</code>
 , 
<code>wx_pub_qr</code>
 , 
<code>wx_lite</code>
 四个渠道；该参数仅在请求退款，传入该字段时返回。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="75"><h4 id="示例对象">示例对象</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">9</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
  <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
  <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Refund Description"</span>,
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
  <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425284"</span>
}</pre>
</div></div><div data-title="创建 Refund 对象" class="keyline-top section contain clearfix " data-reactid="76"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="77"><h3 id="创建-refund-对象">创建 Refund 对象</h3>
<p>通过发起一次退款请求创建一个新的 <code>refund</code> 对象，只能对已经发生交易并且没有全额退款的 <code>charge</code> 对象发起退款。当进行全额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td><code>charge</code>
 对象的 
<code>id</code>
 。</td>
</tr>
<tr>
<td>amount 
<em>optional</em></td>
<td>退款金额大于0, 单位为对应币种的最小货币单位，例如：人民币为分（如退款金额为 1 元，此处请填 100）。必须小于等于可退款金额，默认为全额退款。</td>
</tr>
<tr>
<td>metadata 
<em>optional</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>description 
<strong>required</strong></td>
<td>退款详情，最多 255 个 Unicode 字符。</td>
</tr>
<tr>
<td>funding_source  
<em>optional</em></td>
<td>退款资金来源。取值范围："unsettled_funds"：使用未结算资金退款；"recharge_funds"：使用可用余额退款。注：默认值"unsettled_funds"，该参数仅适用于微信渠道，包括 
<code>wx</code>
 , 
<code>wx_pub</code>
 , 
<code>wx_pub_qr</code>
 , 
<code>wx_lite</code>
 四个渠道；该参数仅在请求退款，传入该字段时返回。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>如果发起退款成功，返回一个退款 <code>refund</code> 对象。如果发生错误，则会返回错误码和错误详情，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="78"><h4 id="定义-4">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/charges/{CHARGE_ID}/refunds</pre>
<h4 id="请求示例-7">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> description=<span class="hljs-string">"Refund Description"</span> \
-X POST</pre>
<h4 id="返回示例-5">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">9</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
  <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
  <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Refund Description"</span>,
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
  <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425284"</span>
}</pre>
</div></div><div data-title="查询 Refund 对象" class="keyline-top section contain clearfix " data-reactid="79"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="80"><h3 id="查询-refund-对象">查询 Refund 对象</h3>
<p>可以通过 <code>charge</code> 对象的查询接口查询某一个 <code>charge</code> 对象的退款列表，也可以通过 <code>refund</code> 对象的 id 查询一个已创建的 <code>refund</code> 对象。可以在 Webhooks 通知之前，通过查询接口确认退款状态。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>查询的 
<code>refund</code>
 对象 
<code>id</code>
 。</td>
</tr>
<tr>
<td>charge 
<strong>required</strong></td>
<td>退款的 
<code>charge</code>
 对象 
<code>id</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>refund</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="81"><h4 id="定义-5">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/charges/{CHARGE_ID}/refunds/{REFUND_ID}</pre>
<h4 id="请求示例-8">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds/re_TmbvDKHiXLCSG0mnj9jnDyjA \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-6">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">9</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
  <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
  <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Refund Description"</span>,
  <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
  <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425284"</span>
}</pre>
</div></div><div data-title="查询 Refund 对象列表" class="keyline-top section contain clearfix " data-reactid="82"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="83"><h3 id="查询-refund-对象列表">查询 Refund 对象列表</h3>
<p>返回之前创建 <code>charge</code> 对象的一个 <code>refund</code> 对象列表。列表是按创建时间进行排序，总是将最新的 <code>refund</code> 对象显示在最前。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>指定退款所在 
<code>charge</code>
 对象的 
<code>id</code>
 。</td>
</tr>
<tr>
<td>limit 
<em>optional</em></td>
<td>限制每页可以返回多少对象，范围为 1-20 项，默认是 10 项。</td>
</tr>
<tr>
<td>starting_after 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_end</code>
 ，你可以使用 
<code>starting_after</code>
 = 
<code>obj_end</code>
 去获取下一页。</td>
</tr>
<tr>
<td>ending_before 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_start</code>
 ，你可以使用 
<code>ending_before</code>
 = 
<code>obj_start</code>
 去获取上一页。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>根据请求参数返回一个 <code>refund</code> 对象列表，如果列表为空，则返回的 <code>data</code> 为空数组。遇到错误时返回相应错误信息，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="84"><h4 id="定义-6">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/charges/{CHARGE_ID}/refunds</pre>
<h4 id="请求示例-9">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds?<span class="hljs-built_in">limit</span>=3 \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-7">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds"</span>,
  <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"data"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_TmbvDKHiXLCSG0mnj9jnDyjA"</span>,
      <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
      <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"TmbvDKHiXLCSG0mnj9jnDyjA"</span>,
      <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
      <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410835214</span>,
      <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
      <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
      <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1410835652</span>,
      <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Refund Description"</span>,
      <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
      <span class="hljs-attr">"metadata"</span>: {},
      <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
      <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
      <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425284"</span>
    }
  ]
}</pre>
</div></div><div data-title="Batch Refunds 批量退款" class="keyline-top section contain clearfix " data-reactid="85"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="86"><h2 id="batch-refunds-批量退款">Batch Refunds 批量退款</h2>
<p>支付宝的退款流程比较特殊，需要人工介入（点击退款链接输入商家密码完成退款），所以你可以调用该接口完成支付宝 <code>alipay</code>，<code>alipay_wap</code> ，<code>alipay_pc_direct</code> 三个渠道的订单批量退款；其他渠道的退款，可以通过重复调用退款接口实现。
<strong>以下是该退款接口的注意点:</strong></p>
<ul>
<li>批量退款接口，目前只支持全额退款，若存在部分退款的订单，则会把此类订单的剩余金额全部退完；</li>
<li>目前支持三个渠道的订单 <code>alipay</code>, <code>alipay_wap</code>, <code>alipay_pc_direct</code>；</li>
<li>需要发起退款的 <code>charge</code> 列表，不可以有重复的 <code>charge id</code> ，必须全部是已支付并且未全额退款的状态；</li>
<li>批量退款中，任意一笔订单信息不符合以上 3 条规则之一，则批量请求中的所有订单退款均会失败，抛出首个报错的 <code>charge</code> 信息；</li>
<li>批量退款对象创建成功后，需要使用浏览器打开 <code>refund_url</code> 字段所对应的地址，商家进行退款操作并且输入支付宝支付密码；</li>
<li>批量退款成功后，调用批量退款查询接口不会返回退款链接，<code>refund_url</code>字段为空；</li>
<li>批量退款请求中同时有不同的支付宝渠道时，必须是同一套参数（公私钥），否则打开链接跳转后会报错。</li>
<li>查询批量退款列表接口的 GET 请求强制要求签名，必须生成 <a href="https://help.pingxx.com/article/212345/"><code>RSA</code> 签名(SHA256)</a>并在请求头中添加 <code>Pingplusplus-Signature</code> 字段，需在管理平台上<a href="https://help.pingxx.com/article/123161">配置商户公钥</a>；同时必须在请求头中添加 <code>Pingplusplus-Request-Timestamp</code> 字段，其值为请求接口的 <code>Unix</code> 时间戳；其他接口请求暂不要求强制签名。</li>
</ul>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>批量退款对象 
<code>id</code>
，由 Ping++ 生成。</td>
</tr>
<tr>
<td>app  
<em>string</em></td>
<td>批量退款对应的 app 对象 ID，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "batch_refund"。</td>
</tr>
<tr>
<td>batch_no 
<em>string</em></td>
<td>批量退款批次号，3-24位，允许字母和英文。</td>
</tr>
<tr>
<td>created 
<em>int</em></td>
<td>批量退款创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>批量退款详情，最多 255 个 Unicode 字符。</td>
</tr>
<tr>
<td>metadata 
<em>hash</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>charges 
<em>array</em></td>
<td>需要退款的 
<code>charge id</code>
 列表。</td>
</tr>
<tr>
<td>refunds 
<em>list</em></td>
<td>退款详情列表，详见 
<a href="#refunds-%E9%80%80%E6%AC%BE">refund 退款</a>
。</td>
</tr>
<tr>
<td>refund_url 
<em>string</em></td>
<td>退款 URL，仅在渠道为支付宝时有值，你需要获取该地址，在浏览器中打开并且输入支付宝支付密码才能完成退款。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="87"><h4 id="对象示例-1">对象示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"151608161453545102"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_abcdefghweqzadfs"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_refund"</span>,
    <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"batchrefund20160801001"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634192</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
    <span class="hljs-attr">"charges"</span>: [
        <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
        <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>
    ],
    <span class="hljs-attr">"refunds"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
        <span class="hljs-attr">"url"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">"data"</span>: [
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425280"</span>
            },
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425281"</span>
            }
        ]
    },
    <span class="hljs-attr">"refund_url"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="创建 Batch Refund 对象" class="keyline-top section contain clearfix " data-reactid="88"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="89"><h3 id="创建-batch-refund-对象">创建 Batch Refund 对象</h3>
<p>创建一个 <code>batch refund</code> 对象来发起支付宝批量退款。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app  
<strong>required</strong></td>
<td>批量退款对应的 app 对象 ID，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>batch_no 
<strong>required</strong></td>
<td>批量退款批次号，3-24位，允许字母和英文。</td>
</tr>
<tr>
<td>charges 
<strong>required</strong></td>
<td>需要退款的 
<code>charge id</code>
 列表，一次最多 100 个。</td>
</tr>
<tr>
<td>description 
<em>optional</em></td>
<td>批量退款详情，最多 255 个 Unicode 字符。</td>
</tr>
<tr>
<td>metadata 
<em>optional</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch refund</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="90"><h4 id="定义-7">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/batch_refunds</pre>
<h4 id="请求示例-10">请求示例</h4>
<pre class='hljs'>curl  https://api.pingxx.com/v1/batch_refunds \
-H <span class="hljs-string">"Content-Type: application/json"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "app": "app_abcdefghweqzadfs",
    "batch_no": "batchrefund20160801001",
    "description": "Batch refund description.",
    "charges": [
        "ch_L8qn10mLmr1GS8e5OODmHaL4",
        "ch_fdOmHaLmLmr1GOD4qn1dS8e5"
    ]
}'</span></pre>
<h4 id="返回示例-8">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"151608161453545122"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_abcdefghweqzadfs"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_refund"</span>,
    <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"batchrefund20160801001"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634192</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
    <span class="hljs-attr">"charges"</span>: [
        <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
        <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>
    ],
    <span class="hljs-attr">"refunds"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
        <span class="hljs-attr">"url"</span>:<span class="hljs-literal">null</span>,
        <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">"data"</span>: [
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425284"</span>
            },
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425285"</span>
            }
        ]
    },
    <span class="hljs-attr">"refund_url"</span>: <span class="hljs-string">"https://mapi.alipay.com/gateway.do?..."</span>
}</pre>
</div></div><div data-title="查询 Batch Refund 对象" class="keyline-top section contain clearfix " data-reactid="91"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="92"><h3 id="查询-batch-refund-对象">查询 Batch Refund 对象</h3>
<p>你可以使用 <code>batch_refund_id</code> 来查询对应的 <code>batch refund</code> 对象信息。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>批量退款对象 
<code>id</code>
 ，由 Ping++ 生成。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch refund</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="93"><h4 id="定义-8">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/batch_refunds/{BATCH_REFUND_ID} </pre>
<h4 id="请求示例-11">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_refunds/151608161453545122 \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: </pre>
<h4 id="返回示例-9">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"151608161453545102"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_abcdefghweqzadfs"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_refund"</span>,
    <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"batchrefund20160801001"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634192</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
    <span class="hljs-attr">"charges"</span>: [
        <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
        <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>
    ],
    <span class="hljs-attr">"refunds"</span>: {
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
        <span class="hljs-attr">"url"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">"data"</span>: [
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"y1u944PmfnrTHyvnL0nD0iD1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425280"</span>
            },
            {
                <span class="hljs-attr">"id"</span>: <span class="hljs-string">"re_nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"refund"</span>,
                <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"nL0nD0iDPmfy1u944HyvnrT1"</span>,
                <span class="hljs-attr">"amount"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-attr">"created"</span>: <span class="hljs-number">1409634160</span>,
                <span class="hljs-attr">"succeed"</span>: <span class="hljs-literal">true</span>,
                <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
                <span class="hljs-attr">"time_succeed"</span>: <span class="hljs-number">1409634192</span>,
                <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Batch refund description."</span>,
                <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
                <span class="hljs-attr">"metadata"</span>: {},
                <span class="hljs-attr">"charge"</span>: <span class="hljs-string">"ch_fdOmHaLmLmr1GOD4qn1dS8e5"</span>,
                <span class="hljs-attr">"charge_order_no"</span>: <span class="hljs-string">"123456789"</span>,
                <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"2004450349201512090096425281"</span>
            }
        ]
    },
    <span class="hljs-attr">"refund_url"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="查询 Batch Refund 对象列表" class="keyline-top section contain clearfix " data-reactid="94"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="95"><h3 id="查询-batch-refund-对象列表">查询 Batch Refund 对象列表</h3>
<p>你可以使用调用该接口来查询对应的 <code>batch refund</code> 对象列表信息。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>page 
<em>optional</em>
 
<em>int</em></td>
<td>页码，取值范围：1~1000000000；默认值为"1"。</td>
</tr>
<tr>
<td>per_page 
<em>optional</em>
 
<em>int</em></td>
<td>每页数量，取值范围：1～100；默认值为"10"。</td>
</tr>
<tr>
<td>created
[
gt
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间大于该值。</td>
</tr>
<tr>
<td>created
[
gte
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间大于或等于该值。</td>
</tr>
<tr>
<td>created
[
lt
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间小于该值。</td>
</tr>
<tr>
<td>created
[
lte
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间小于或等于该值。</td>
</tr>
<tr>
<td>app  
<strong>required</strong></td>
<td>批量退款对应的 app 对象 ID，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch refund</code> 对象列表或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="96"><h4 id="定义-9">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/batch_refunds?app={app_id}</pre>
<h4 id="请求示例-12">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_refunds?app={app_id} \
-H <span class="hljs-string">"Content-Type: application/json; charset=utf-8"</span> \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Pingplusplus-Request-Timestamp: 1476067085"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: </pre>
<h4 id="返回示例-10">返回示例</h4>
<pre class='hljs'>{
  "object": "list",
  "url": "/v1/batch_refunds",
  "has_more": true,
  "data": [
      {
          "id": "151608191520130289",
          "object": "batch_refund",
          "app": "app_abcdefghweqzadfs",
          "created": 1471591213,
          "livemode": true,
          "batch_no": "batchrefundw20e8016w00w5",            
          "charges": [
              "ch_m5iTe9vfP4a5nfPuz99OmT48",
              "ch_nLCK8O0yHqP4zDybLGi1GOKS",
              "ch_8K8qL0aLuz1CDCu58K0m9SO4"
          ],
          "refunds": {
              "object": "list",
              "url": null,
              "has_more": false,
              "data": [
                  {
                     "id": "re_480mXL8eDq1KSGOGKSebnTu9",
                     "object": "refund",
                     "order_no": "480mXL8eDq1KSGOGKSebnTu9",
                     "amount": 1,
                     "succeed": false,
                     "status": "pending",
                     "created": 1471591213,
                     "time_succeed": null,
                     "description": "Batch refund description.",
                     "failure_code": null,
                     "failure_msg": null,
                     "metadata": {
                     },
                     "charge": "ch_nLCK8O0yHqP4zDybLGi1GOKS",
                     "charge_order_no": "20160426012",
                     "transaction_no": null
                   },
                   {
                      "id": "re_80unvLij1WTSbLGOGSHmnzP0",
                      "object": "refund",
                      "order_no": "80unvLij1WTSbLGOGSHmnzP0",
                      "amount": 9,
                      "succeed": false,
                      "status": "pending",
                      "created": 1471591213,
                      "time_succeed": null,
                      "description": "Batch refund description.",
                      "failure_code": null,
                      "failure_msg": null,
                      "metadata": {
                      },
                      "charge": "ch_8K8qL0aLuz1CDCu58K0m9SO4",
                      "charge_order_no": "T160226095516pQ",
                      "transaction_no": null
                  },
                  {
                     "id": "re_LCWD8O8GaP441arfb5qn9efP",
                     "object": "refund",
                     "order_no": "LCWD8O8GaP441arfb5qn9efP",
                     "amount": 1,
                     "succeed": false,
                     "status": "pending",
                     "created": 1471591213,
                     "time_succeed": null,
                     "description": "Batch refund description.",
                     "failure_code": null,
                     "failure_msg": null,
                        "metadata": {
                        },
                        "charge": "ch_m5iTe9vfP4a5nfPuz99OmT48",
                        "charge_order_no": "20160125103012",
                        "transaction_no": null
                    }
                ]
            },
            "refund_url": "https://mapi.alipay.com/gateway.do?service=refund_fastpay_by_platform_pwd&amp;partner=2088711316963982&amp;_input_charset=utf-8&amp;notify_url=http%3A%2F%2F218.244.151.190%2Fnotify%2Fbatch_refunds%2F151608191520130289&amp;seller_user_id=2088711316963982&amp;refund_date=2016-08-19%2015%3A20%3A13&amp;batch_no=20160819batchrefundw20e8016w00w5&amp;batch_num=3&amp;detail_data=2016022621001004920228205160%5E0.09%5EBatch%20refund%20description.%232016012521001004920027269239%5E0.01%5EBatch%20refund%20description.%232016042621001004290267984563%5E0.01%5EBatch%20refund%20description.&amp;sign=p431TPLEdayicFAKxwhnBUknZyV7Fe21vAzTimXwMMBcoCa58hEBFaldOVLmMNkUB6NDbu5Uf6CigPkQlIqF8QP4qLtNLnTrwsGvYncTwO6bduTN2kIjSIeQhKYHl%2B%2BbQtb56q9V2JVoGFCz3IfHjcODC4hP2bTfqrL6f26rdNE%3D&amp;sign_type=RSA",
            "description": "Batch refund description.",
            "metadata": {
            }
        },
        {
            "id": "151608191443239949",
            "object": "batch_refund",
            "app": "app_abcdefghweqzadfs",
            "created": 1471589003,
            "livemode": true,
            "batch_no": "batchrefundw20e801600w5",
            "charges": [
                "ch_m5iTe9vfP4a5nfPuz99OmT48"
            ],
            "refunds": {
                "object": "list",
                "url": null,
                "has_more": false,
                "data": [
                    {
                      "id": "re_CC4O44LuXvH8SevvLGSa5y94",
                      "object": "refund",
                      "order_no": "CC4O44LuXvH8SevvLGSa5y94",
                      "amount": 1,
                      "succeed": false,
                      "status": "pending",
                      "created": 1471589003,
                      "time_succeed": null,
                      "description": "Batch refund description.",
                      "failure_code": null,
                      "failure_msg": null,
                      "metadata": {
                     },
                      "charge": "ch_m5iTe9vfP4a5nfPuz99OmT48",
                      "charge_order_no": "20160125103012",
                      "transaction_no": null
                  }
              ]
          },
          "refund_url": "https://mapi.alipay.com/gateway.do?service=refund_fastpay_by_platform_pwd&amp;partner=2088711316963982&amp;_input_charset=utf-8&amp;notify_url=http%3A%2F%2F218.244.151.190%2Fnotify%2Fbatch_refunds%2F151608191443239949&amp;seller_user_id=2088711316963982&amp;refund_date=2016-08-19%2014%3A43%3A23&amp;batch_no=20160819batchrefundw20e801600w5&amp;batch_num=1&amp;detail_data=2016012521001004920027269239%5E0.01%5EBatch%20refund%20description.&amp;sign=HpYKWf4ZJSVN6gShkiCl82kEEKLtGJRuNmlIjrjOdeVJrvW1LjytpME8ivxykwG3U6AzO%2BUDgHrasIdHSokSSQXzEQRC4cmMqt4aSOQYEQ5fmUDkg44WvnjqJqVCBKtU6NugiNXKVm9YSIpk5cCd9szbkOKu04Y2MUK5AS1Fp4o%3D&amp;sign_type=RSA",
          "description": "Batch refund description.",
          "metadata": {
            }
        },
        {...}
    ]
}</pre>
</div></div><div data-title="Red Envelopes 红包" class="keyline-top section contain clearfix " data-reactid="97"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="98"><h2 id="red-envelopes-红包">Red Envelopes 红包</h2>
<p>你可以请求一个 <code>red_envelope</code> 红包对象向你的用户发红包。所有和红包支付相关的要素信息都存储在 <code>red_envelope</code> 对象之中，你可以通过发起红包请求创建新的 <code>red_envelope</code> 对象，也可以随时查看红包对象的状态。每个 <code>red_envelope</code> 对象都拥有一个标识 <code>id</code> ，该 <code>id</code> 在系统内唯一。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>红包对象 
<code>id</code>
 ，由 Ping++ 生成，28 位长度字符串。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 
<code>red_envelope</code>
。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>支付红包的时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>received 
<em>timestamp</em></td>
<td>红包的接收时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>refunded 
<em>timestamp</em></td>
<td>红包超过 24 小时未领取的退回时间，用 Unix 时间戳表示。72</td>
</tr>
<tr>
<td>livemode 
<em>boolean</em></td>
<td>支付是否处于 
<code>live</code>
 模式。</td>
</tr>
<tr>
<td>status 
<em>string</em></td>
<td>红包状态。目前支持 5 种状态：sending: 发放中; sent: 已发放待领取; failed: 发放失败; received: 已领取; refund: 已退款。</td>
</tr>
<tr>
<td>app 
<strong>expandable</strong>
 
<em>string</em></td>
<td>红包使用的 
<code>app</code>
 对象的 
<code>id</code>
 ，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>string</em></td>
<td>红包使用的第三方支付渠道。目前仅支持 
<code>wx_pub</code>
。</td>
</tr>
<tr>
<td>order_no 
<em>string</em></td>
<td>红包使用的商户订单号。
<code>wx_pub</code>
 渠道规定为 1 ~ 28 位不能重复的数字。</td>
</tr>
<tr>
<td>transaction_no 
<em>string</em></td>
<td>第三方支付渠道的交易流水号。</td>
</tr>
<tr>
<td>amount 
<em>int</em></td>
<td>总金额大于0，单位为对应币种的最小货币单位，例如：人民币为分。
<code>wx_pub</code>
 限制在 100 ~ 20000 之间，即 1 ~ 200 元。</td>
</tr>
<tr>
<td>amount_settle 
<em>int</em></td>
<td>清算金额，单位为对应币种的最小货币单位，例如：人民币为分。</td>
</tr>
<tr>
<td>currency 
<em>string</em></td>
<td>三位 ISO 货币代码，目前仅支持人民币 cny。</td>
</tr>
<tr>
<td>recipient 
<em>string</em></td>
<td>接收者 id， 为用户在
<code>wx_pub</code>
 渠道下的 
<code>open_id</code>
 。</td>
</tr>
<tr>
<td>subject 
<em>string</em></td>
<td>红包主题名称，最多 32 个字节。</td>
</tr>
<tr>
<td>body 
<em>string</em></td>
<td>红包祝福语，最多 128 个字节。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>备注信息，最多 255 个字节。</td>
</tr>
<tr>
<td>metadata 
<em>hash</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>红包订单的错误消息的描述。</td>
</tr>
<tr>
<td>extra 
<em>object</em></td>
<td>支付渠道相关的附加参数，具体参考下表 
<code>extra</code>
 参数说明。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>extra</code> 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>send_name 
<em>string</em></td>
<td>商户名称，最多 32 个字节。</td>
</tr>
<tr>
<td>scene_id 
<em>string</em></td>
<td>发放红包使用场景，红包金额大于 200 时必传。具体属性请看请求参数中的 
<code>scene_id</code>
 属性值。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="99"><h4 id="示例对象-1">示例对象</h4>
<pre class='hljs'>{
   <span class="hljs-attr">"id"</span>: <span class="hljs-string">"red_KCabLO58W5G0rX90iT0az5a9"</span>,
   <span class="hljs-attr">"object"</span>: <span class="hljs-string">"red_envelope"</span>,
   <span class="hljs-attr">"created"</span>: <span class="hljs-number">1428499439</span>,
   <span class="hljs-attr">"received"</span>: <span class="hljs-literal">null</span>,
   <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">null</span>,
   <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
   <span class="hljs-attr">"status"</span>: <span class="hljs-string">"sending"</span>,
   <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
   <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
   <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
   <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
   <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
   <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
   <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
   <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"Openid"</span>,
   <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
   <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
   <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
   <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
   <span class="hljs-attr">"extra"</span>: {
       <span class="hljs-attr">"send_name"</span>: <span class="hljs-string">"Send Name"</span>
   }
 }</pre>
</div></div><div data-title="创建 Red Envelope 对象" class="keyline-top section contain clearfix " data-reactid="100"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="101"><h3 id="创建-red-envelope-对象">创建 Red Envelope 对象</h3>
<p>发起一次红包请求需要创建一个新的 <code>red_envelope</code> 对象。如果支付失败，请检查错误信息，一般是由于账户余额不足引起的。使用测试模式的 API Key，则不会发生真实交易。同步返回交易结果，不会发送 Webhooks 通知。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app
[
id
]
 
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>红包使用的 
<code>app</code>
 对象的 
<code>id</code>
 ，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<strong>required</strong></td>
<td>红包使用的第三方支付渠道。目前仅支持
<code>wx_pub</code>
。</td>
</tr>
<tr>
<td>order_no 
<strong>required</strong></td>
<td>红包使用的商户订单号。
<code>wx_pub</code>
 渠道规定为 1 ~ 28 位不能重复的数字。</td>
</tr>
<tr>
<td>amount 
<strong>required</strong></td>
<td>总金额大于0，单位为对应币种的最小货币单位，例如：人民币为分。
<code>wx_pub</code>
 限制在 100 ~ 20000 之间，即 1 ~ 200 元。</td>
</tr>
<tr>
<td>currency 
<strong>required</strong></td>
<td>三位 ISO 货币代码，目前仅支持人民币 
<code>cny</code>
。</td>
</tr>
<tr>
<td>recipient 
<strong>required</strong></td>
<td>接收者 id， 为用户在 
<code>wx_pub</code>
 下的 
<code>open_id</code>
。</td>
</tr>
<tr>
<td>subject 
<strong>required</strong></td>
<td>红包主题名称，最多 32 个字节。</td>
</tr>
<tr>
<td>body 
<strong>required</strong></td>
<td>红包祝福语，最多 128 个字节。</td>
</tr>
<tr>
<td>description 
<strong>required</strong></td>
<td>备注信息，最多 255 个字节。</td>
</tr>
<tr>
<td>metadata 
<em>optional</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>extra 
<strong>required</strong></td>
<td>支付渠道相关的附加参数，具体参考下表 
<code>extra</code>
 参数说明。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>extra</code> 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>send_name 
<strong>required</strong></td>
<td>商户名称，最多 32 个字节。</td>
</tr>
<tr>
<td>scene_id 
<em>optional</em></td>
<td>发放红包使用场景，红包金额大于 200 时必传。具体属性看 
<code>scene_id</code>
 属性值。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>scene_id</code> 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>PRODUCT_1 
<em>string</em></td>
<td>商品促销</td>
</tr>
<tr>
<td>PRODUCT_2 
<em>string</em></td>
<td>抽奖</td>
</tr>
<tr>
<td>PRODUCT_3 
<em>string</em></td>
<td>虚拟物品兑奖</td>
</tr>
<tr>
<td>PRODUCT_4 
<em>string</em></td>
<td>企业内部福利</td>
</tr>
<tr>
<td>PRODUCT_5 
<em>string</em></td>
<td>渠道分润</td>
</tr>
<tr>
<td>PRODUCT_6 
<em>string</em></td>
<td>保险回馈</td>
</tr>
<tr>
<td>PRODUCT_7 
<em>string</em></td>
<td>彩票派奖</td>
</tr>
<tr>
<td>PRODUCT_8 
<em>string</em></td>
<td>税务刮奖</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>同步返回红包支付结果。如果发生错误，则会返回错误码和错误详情，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="102"><h4 id="定义-10">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/red_envelopes</pre>
<h4 id="请求示例-13">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/red_envelopes \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> order_no=123456789 \
<span class="hljs-_">-d</span> app[id]=app_1Gqj58ynP0mHeX1q \
<span class="hljs-_">-d</span> channel=wx_pub \
<span class="hljs-_">-d</span> amount=100 \
<span class="hljs-_">-d</span> currency=cny \
<span class="hljs-_">-d</span> subject=<span class="hljs-string">"Your Subject"</span> \
<span class="hljs-_">-d</span> body=<span class="hljs-string">"Your Body"</span> \
<span class="hljs-_">-d</span> extra[send_name]=<span class="hljs-string">"Send Name"</span> \
<span class="hljs-_">-d</span> reciprent=Openid \
<span class="hljs-_">-d</span> description=<span class="hljs-string">"Your Description"</span></pre>
<h4 id="返回示例-11">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"red_KCabLO58W5G0rX90iT0az5a9"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"red_envelope"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1428499439</span>,
  <span class="hljs-attr">"received"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"sending"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"Openid"</span>,
  <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
  <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
  <span class="hljs-attr">"extra"</span>: {
    <span class="hljs-attr">"send_name"</span>: <span class="hljs-string">"Send Name"</span>
  }
}</pre>
</div></div><div data-title="查询 Red Envelope 对象" class="keyline-top section contain clearfix " data-reactid="103"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="104"><h3 id="查询-red-envelope-对象">查询 Red Envelope 对象</h3>
<p>通过 <code>red_envelope</code> 对象的 <code>id</code> 查询一个已创建的 <code>red_envelope</code> 对象。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>红包 
<code>id</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>red_envelope</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="105"><h4 id="定义-11">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/red_envelopes/{RED_ID}</pre>
<h4 id="请求示例-14">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/red_envelopes/red_KCabLO58W5G0rX90iT0az5a9 \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-12">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"red_KCabLO58W5G0rX90iT0az5a9"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"red_envelope"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1428499439</span>,
  <span class="hljs-attr">"received"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"sending"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"Openid"</span>,
  <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
  <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
  <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
  <span class="hljs-attr">"extra"</span>: {
      <span class="hljs-attr">"send_name"</span>: <span class="hljs-string">"Send Name"</span>
  }
}</pre>
</div></div><div data-title="查询 Red Envelope 对象列表" class="keyline-top section contain clearfix " data-reactid="106"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="107"><h3 id="查询-red-envelope-对象列表">查询 Red Envelope 对象列表</h3>
<p>返回之前创建 <code>red_envelope</code> 对象的一个列表。列表是按创建时间进行排序，总是将最新的 <code>red_envelope</code> 对象显示在最前。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>limit 
<em>optional</em></td>
<td>限制每页可以返回多少对象，范围为 1-20 项，默认是 10 项。</td>
</tr>
<tr>
<td>starting_after 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_end</code>
 ，你可以使用 
<code>starting_after</code>
 = 
<code>obj_end</code>
 去获取下一页。</td>
</tr>
<tr>
<td>ending_before 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_start</code>
，你可以使用 
<code>ending_before</code>
 = 
<code>obj_start</code>
 去获取上一页。</td>
</tr>
<tr>
<td>app
[
id
]
 
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>红包使用的 
<code>app</code>
 对象的 
<code>id</code>
 ，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>optional</em></td>
<td>支付使用的第三方支付渠道，目前仅支持
<code>wx_pub</code>
 。</td>
</tr>
<tr>
<td>status 
<em>optional</em></td>
<td>红包状态。目前支持 5 种状态：sending: 发放中; sent: 已发放待领取; failed: 发放失败; received: 已领取; refund: 已退款。</td>
</tr>
<tr>
<td>created 
<em>optional</em></td>
<td>对象的创建时间，用 Unix 时间戳表示，具体参考下表 
<code>created</code>
 参数。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>created</code>参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>created
[
gt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于 
<code>red_envelope</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
gte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于或等于 
<code>red_envelope</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于 
<code>red_envelope</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于或等于 
<code>red_envelope</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>根据请求参数返回一个 <code>red_envelope</code> 对象列表，如果列表为空，则返回的 <code>data</code> 为空数组。遇到错误时返回相应错误信息，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="108"><h4 id="定义-12">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/red_envelopes?expand[]=app</pre>
<h4 id="请求示例-15">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/red_envelopes/?<span class="hljs-built_in">limit</span>=3?expand[]=app \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-13">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/red_envelopes"</span>,
  <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"data"</span>: [
      {
        <span class="hljs-attr">"id"</span>: <span class="hljs-string">"red_KCabLO58W5G0rX90iT0az5a9"</span>,
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"red_envelope"</span>,
        <span class="hljs-attr">"created"</span>: <span class="hljs-number">1428499439</span>,
        <span class="hljs-attr">"received"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
        <span class="hljs-attr">"status"</span>: <span class="hljs-string">"sending"</span>,
        <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
        <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
        <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
        <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
        <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
        <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
        <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"Openid"</span>,
        <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
        <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
        <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
        <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
        <span class="hljs-attr">"extra"</span>: {
          <span class="hljs-attr">"send_name"</span>: <span class="hljs-string">"Send Name"</span>
          }
      }
  ]
}</pre>
</div></div><div data-title="Transfers 企业付款" class="keyline-top section contain clearfix " data-reactid="109"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="110"><h2 id="transfers-企业付款">Transfers 企业付款</h2>
<p>你可以请求一个 <code>transfer</code> 对象向用户发起微信或者银行卡的转账。所有与企业付款相关的要素信息都存储在 <code>transfer</code> 对象之中，你可以通过发起企业付款请求创建新的 <code>transfer</code>  对象，也可以随时查看企业付款对象的状态。每个 <code>transfer</code> 对象都拥有一个标识 <code>id</code> ，该 <code>id</code> 在系统内唯一。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>企业付款对象 
<code>id</code>
 ，由 Ping++ 生成，27 位长度字符串。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "transfer"。</td>
</tr>
<tr>
<td>type 
<em>string</em></td>
<td>付款类型 (当前仅支持 B2C 企业付款: b2c)。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>time_transferred 
<em>timestamp</em></td>
<td>支付完成时间, 用 Unix 时间戳表示。由第三方支付渠道返回。</td>
</tr>
<tr>
<td>livemode 
<em>boolean</em></td>
<td>是否是 
<code>live</code>
 模式。</td>
</tr>
<tr>
<td>status 
<em>string</em></td>
<td>付款状态。目前支持 5 种状态：pending: 处理中; paid: 付款成功; failed: 付款失败;scheduled:待发送，unionpay渠道的转账会在请求成功后延时5分钟发送，5分钟内处于待发送状态;canceled:取消发送，更新（取消）转账后的订单状态。</td>
</tr>
<tr>
<td>app 
<strong>expandable</strong>
 
<em>string</em></td>
<td>转账对应的 
<code>app</code>
 对象的 
<code>id</code>
。
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>string</em></td>
<td>付款使用的第三方支付渠道名称。目前支持
<code>wx_pub</code>
 和 
<code>unionpay</code>
 企业付款（银行卡）。</td>
</tr>
<tr>
<td>order_no 
<em>string</em></td>
<td>付款使用的商户内部订单号。
<code>wx_pub</code>
 规定为 1 ~ 50 位不能重复的数字字母组合; 
<code>unionpay</code>
 为1~16位的纯数字。</td>
</tr>
<tr>
<td>amount 
<em>int</em></td>
<td>付款总金额。单位为对应币种的最小货币单位，例如：人民币为分。</td>
</tr>
<tr>
<td>amount_settle 
<em>int</em></td>
<td>清算金额，单位为对应币种的最小货币单位，例如：人民币为分。</td>
</tr>
<tr>
<td>currency 
<em>string</em></td>
<td>三位 ISO 货币代码，目前仅支持人民币 cny。</td>
</tr>
<tr>
<td>recipient 
<em>string</em></td>
<td>接收者 id， 微信企业付款时为用户在
<code>wx_pub</code>
 下的 
<code>open_id</code>
 ;渠道为 
<code>unionpay</code>
 时，不需要传该参数。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>备注信息，最多 255 个 Unicode 字符。渠道为 
<code>unionpay</code>
 时，最多 99 个 Unicode 字符；渠道为 
<code>wx_pub</code>
 时，最多 99 个英文和数字的组合或最多 33 个中文字符，不可以包含特殊字符。</td>
</tr>
<tr>
<td>metadata 
<em>hash</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>transaction_no 
<em>string</em></td>
<td>交易流水号，由第三方渠道提供。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>企业付款订单的错误消息的描述。</td>
</tr>
<tr>
<td>extra 
<em>object</em></td>
<td><code>transfer</code>
 相关的附加参数，详情参考
<a href="#%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">extra参数说明</a>
。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="111"><h4 id="示例对象-2">示例对象</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"tr_HqbzHCvLOaL4La1ezHfDWTqH"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"transfer"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1432724825</span>,
  <span class="hljs-attr">"time_transferred"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"o7zpMs5MW2-52GAy5hRrjdYVCktU"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"1000018301201505200184147302"</span>,
  <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
  <span class="hljs-attr">"extra"</span>: {
      <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"User Name"</span>,
      <span class="hljs-attr">"force_check"</span>: <span class="hljs-literal">true</span>
  }
}</pre>
</div></div><div data-title="创建 Transfer 对象" class="keyline-top section contain clearfix " data-reactid="112"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="113"><h3 id="创建-transfer-对象">创建 Transfer 对象</h3>
<p>你可以请求一个新的 <code>transfer</code> 对象发起一次企业付款。如果支付失败，请检查错误信息，一般是由于账户余额不足引起的。使用测试模式的 API Key，则不会发生真实交易。测试模式需要主动<a href="#%E6%9F%A5%E8%AF%A2-transfer-%E5%AF%B9%E8%B1%A1">查询</a>下 <code>transfer</code> 对象的状态，Ping++ 才会发送 Webhooks 通知。<strong>注：渠道为 <code>unionpay</code> 时，强制要求<a href="https://help.pingxx.com/article/1016785">签名</a>（Pingplusplus-Signature），需在管理平台上<a href="https://help.pingxx.com/article/123161">配置商户公钥</a>，但无须开启; <code>unionpay</code> 渠道的转账会延时5分钟发送，5分钟内可以调用<a href="#%E6%9B%B4%E6%96%B0-transfer%E5%AF%B9%E8%B1%A1">更新Transfer接口</a>取消该笔转账。</strong></p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app
[
id
]
 
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>转账使用的 
<code>app</code>
 对象的 
<code>id</code>
，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<strong>required</strong></td>
<td>企业付款使用的第三方支付渠道名称。目前支持
<code>wx_pub</code>
 和 
<code>unionpay</code>
 企业付款（银行卡) 。</td>
</tr>
<tr>
<td>order_no 
<strong>required</strong></td>
<td>企业付款使用的商户内部订单号。
<code>wx_pub</code>
 规定为 1 ~ 50 位不能重复的数字字母组合; 
<code>unionpay</code>
 为1~16位的纯数字。</td>
</tr>
<tr>
<td>amount 
<strong>required</strong></td>
<td>付款金额。单位为对应币种的最小货币单位，例如：人民币为分。</td>
</tr>
<tr>
<td>type 
<strong>required</strong></td>
<td>付款类型。 当前仅支持 B2C 企业付款。</td>
</tr>
<tr>
<td>currency 
<strong>required</strong></td>
<td>三位 ISO 货币代码，目前仅支持人民币: 
<code>cny</code>
 。</td>
</tr>
<tr>
<td>recipient 
<strong>required</strong></td>
<td>接收者 id，为用户在
<code>wx_pub</code>
 下的 
<code>open_id</code>
 ;渠道为 
<code>unionpay</code>
 时，不需要传该参数。</td>
</tr>
<tr>
<td>description 
<strong>required</strong></td>
<td>备注信息，最多 255 个 Unicode 字符。渠道为 
<code>unionpay</code>
 时，最多 99 个 Unicode 字符；渠道为 
<code>wx_pub</code>
 时，最多 99 个英文和数字的组合或最多 33 个中文字符，不可以包含特殊字符。</td>
</tr>
<tr>
<td>metadata 
<em>optional</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>extra 
<em>optional</em></td>
<td>相关的附加参数，详情参考
<a href="#%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">extra参数说明</a>
。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>同步返回付款支付结果。如果发生错误，则会返回错误码和错误详情，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="114"><h4 id="定义-13">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/transfers</pre>
<h4 id="请求示例-16">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/transfers \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> order_no=123456789 \
<span class="hljs-_">-d</span> app[id]=app_1Gqj58ynP0mHeX1q \
<span class="hljs-_">-d</span> channel=wx_pub \
<span class="hljs-_">-d</span> amount=100 \
<span class="hljs-_">-d</span> currency=cny \
<span class="hljs-_">-d</span> <span class="hljs-built_in">type</span>=b2c \
<span class="hljs-_">-d</span> recipient=Openid \
<span class="hljs-_">-d</span> description=<span class="hljs-string">"Your Description"</span></pre>
<h4 id="返回示例-14">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"tr_HqbzHCvLOaL4La1ezHfDWTqH"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"transfer"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1432724825</span>,
  <span class="hljs-attr">"time_transferred"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"o7zpMs5MW2-52GAy5hRrjdYVCktU"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"1000018301201505200184147302"</span>,
  <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
  <span class="hljs-attr">"extra"</span>: {
      <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"User Name"</span>,
      <span class="hljs-attr">"force_check"</span>: <span class="hljs-literal">true</span>
     }
}</pre>
</div></div><div data-title="查询 Transfer 对象" class="keyline-top section contain clearfix " data-reactid="115"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="116"><h3 id="查询-transfer-对象">查询 Transfer 对象</h3>
<p>通过 <code>transfer</code> 对象的 <code>id</code> 查询一个已创建的 <code>transfer</code> 对象。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>付款对象 
<code>id</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>transfer</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="117"><h4 id="定义-14">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/transfers/{TRANSFER_ID}</pre>
<h4 id="请求示例-17">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/transfers/tr_HqbzHCvLOaL4La1ezHfDWTqH \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-15">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"tr_HqbzHCvLOaL4La1ezHfDWTqH"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"transfer"</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1432724825</span>,
    <span class="hljs-attr">"time_transferred"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
    <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
    <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
    <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
    <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"o7zpMs5MW2-52GAy5hRrjdYVCktU"</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
    <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"1000018301201505200184147302"</span>,
    <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
    <span class="hljs-attr">"extra"</span>: {
        <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"User Name"</span>,
        <span class="hljs-attr">"force_check"</span>: <span class="hljs-literal">true</span>
    }
}</pre>
</div></div><div data-title="查询 Transfer 对象列表" class="keyline-top section contain clearfix " data-reactid="118"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="119"><h3 id="查询-transfer-对象列表">查询 Transfer 对象列表</h3>
<p>返回之前创建过 <code>transfer</code> 对象的一个列表。列表是按创建时间进行排序，总是将最新的 <code>transfer</code> 对象显示在最前。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>limit 
<em>optional</em></td>
<td>限制每页可以返回多少对象，范围为 1-100 项，默认是 10 项。</td>
</tr>
<tr>
<td>starting_after 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_end</code>
 ，你可以使用 
<code>starting_after</code>
 = 
<code>obj_end</code>
 去获取下一页。</td>
</tr>
<tr>
<td>ending_before 
<em>optional</em></td>
<td>在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的最后一项的 
<code>id</code>
 是 
<code>obj_start</code>
 ，你可以使用 
<code>ending_before</code>
 = 
<code>obj_start</code>
 去获取上一页。</td>
</tr>
<tr>
<td>created 
<em>optional</em></td>
<td>对象的创建时间，用 Unix 时间戳表示，具体参考下表 
<code>created</code>
 参数。</td>
</tr>
<tr>
<td>app
[
id
]
 
<strong>expandable</strong>
 
<strong>required</strong></td>
<td>转账使用的 
<code>app</code>
 对象的 
<code>id</code>
，
<code>expandable</code>
 可展开，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>optional</em></td>
<td>支付使用的第三方支付渠道，目前支持
<code>wx_pub</code>
 、 
<code>unionpay</code>
 企业付款（银行卡)。</td>
</tr>
<tr>
<td>status 
<em>optional</em></td>
<td>付款状态。目前支持 5 种状态：pending: 处理中; paid: 付款成功; failed: 付款失败;scheduled:待发送，unionpay渠道的转账会在请求成功后延时5分钟发送，5分钟内处于待发送状态;canceled:取消发送，更新（取消）转账后的订单状态。</td>
</tr>
<tr>
<td>type 
<em>optional</em></td>
<td>付款类型，目前仅支持 B2C。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>created</code> 参数说明</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>created
[
gt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于 
<code>transfer</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
gte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>大于或等于 
<code>transfer</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lt
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于 
<code>transfer</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>created
[
lte
]
 
<em>optional</em>
 
<em>int</em></td>
<td>小于或等于 
<code>transfer</code>
 对象的创建时间，用 Unix 时间戳表示。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>transfer</code> 对象的列表或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="120"><h4 id="定义-15">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/transfers?expand[]=app</pre>
<h4 id="请求示例-18">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/transfers/?<span class="hljs-built_in">limit</span>=3&amp;expand[]=app
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-16">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/transfers"</span>,
  <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"data"</span>: [
      {
        <span class="hljs-attr">"id"</span>: <span class="hljs-string">"tr_HqbzHCvLOaL4La1ezHfDWTqH"</span>,
        <span class="hljs-attr">"object"</span>: <span class="hljs-string">"transfer"</span>,
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>,
        <span class="hljs-attr">"created"</span>: <span class="hljs-number">1432724825</span>,
        <span class="hljs-attr">"time_transferred"</span>: <span class="hljs-literal">null</span>,
        <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
        <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
        <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
        <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx_pub"</span>,
        <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
        <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
        <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
        <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
        <span class="hljs-attr">"recipient"</span>: <span class="hljs-string">"Openid"</span>,
        <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
        <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"1000018301201505200184147302"</span>,
        <span class="hljs-attr">"failure_msg"</span>:<span class="hljs-literal">null</span>,
        <span class="hljs-attr">"extra"</span>: {
           <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"User Name"</span>,
           <span class="hljs-attr">"force_check"</span>: <span class="hljs-literal">true</span>
        }
     }
  ]
}</pre>
</div></div><div data-title="更新 Transfer对象" class="keyline-top section contain clearfix " data-reactid="121"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="122"><h3 id="更新-transfer对象">更新 Transfer对象</h3>
<p>你可以调用更新 <code>transfer</code> 对象接口来取消企业付款（银行卡）的转账订单。该接口只适用 <code>unionpay</code> 渠道，该渠道在 <code>transfer</code> 对象请求成功后，延时5分钟发送转账，5分钟内订单处于scheduled的准备发送状态，且可调用该接口通过 <code>transfer</code> 对象的 <code>id</code> 更新一个已创建的 <code>transfer</code> 对象，即取消该笔转账。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td><code>unionpay</code>
 渠道的 
<code>transfer</code>
 对象 
<code>id</code>
 。</td>
</tr>
<tr>
<td>status 
<strong>required</strong></td>
<td>更新 
<code>transfer</code>
 的状态，只支持 
<code>canceled</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个更新成功的 <code>transfer</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="123"><h4 id="定义-16">定义</h4>
<pre class='hljs'>PUT https://api.pingxx.com/v1/transfers/{TRANSFER_ID}</pre>
<h4 id="请求示例-19">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/transfers/tr_0eTi1OGqr9iH0i9CePf1a9C0 \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Content-Type: application/json"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "status":"canceled"
}'</span></pre>
<h4 id="返回示例-17">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"tr_0eTi1OGqr9iH0i9CePf1a9C0"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"transfer"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1467615446</span>,
  <span class="hljs-attr">"time_transferred"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"canceled"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"unionpay"</span>,
  <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"123456789"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"recipient"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Your Description"</span>,
  <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"371646"</span>,
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"extra"</span>: {
      <span class="hljs-attr">"card_number"</span>: <span class="hljs-string">"6225220317083517"</span>,
      <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"张三丰"</span>,
      <span class="hljs-attr">"open_bank_code"</span>: <span class="hljs-string">"0102"</span>
  }
}</pre>
</div></div><div data-title="Batch Transfers 批量企业付款" class="keyline-top section contain clearfix " data-reactid="124"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="125"><h2 id="batch-transfers-批量企业付款">Batch Transfers 批量企业付款</h2>
<p>支付宝的企业付款接口比较特殊，需要人工介入（点击付款确认链接输入商户密码完成付款），所以你可以调用该批量企业付款接口完成支付宝的批量企业付款，这样，多笔付款只需要输入一次支付密码即可；此外，调用该接口还可实现批量企业付款到银行卡。<strong>以下是该付款接口的注意点:</strong></p>
<ul>
<li>支付宝批量付款手续费率 0.5%，最低 1 元，最高 25 元。手续费按单笔分别计算，批量对象中的手续费 <code>fee</code> 字段会在批量企业付款成功后更新。</li>
<li>支付宝的批量企业付款状态 <code>status</code> 包含一个特殊的 <code>partially_succeeded</code> 状态，若批量企业付款中存在部分成功，部分失败的情况，批量企业付款对象将处于该状态，对于成功部分的付款也会发送 <a href="#event-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B"><code>batch_transfer.succeeded</code> 事件</a>。</li>
<li>批量企业付款到银行卡的付款状态 <code>status</code> 包含两个特殊状态：<code>scheduled</code> 为待发送状态，该渠道的企业付款会在请求成功后延时 5 分钟发送，5 分钟内处于待发送状态；<code>canceled</code> 为取消发送状态，更新（取消）企业付款后的订单状态。 </li>
<li>批量企业付款对象 <code>batch_transfer</code> 的 <code>recipients</code> 字段里的元素中，会有每笔付款对象的 <code>transfer</code> （对应的 <code>transfer</code> 对象 <code>ID</code>） 和 <code>status</code>（对应的 <code>transfer</code> 对象状态）字段。</li>
<li>批量企业付款接口单次最多只能请求 200 笔企业付款订单。</li>
<li>此接口的所有请求强制要求签名，必须生成 <a href="https://help.pingxx.com/article/212345/"><code>RSA</code> 签名(SHA256)</a>并在请求头中添加 <code>Pingplusplus-Signature</code> 字段，需在管理平台上<a href="https://help.pingxx.com/article/123161">配置商户公钥</a>；同时必须在请求头中添加 <code>Pingplusplus-Request-Timestamp</code> 字段，其值为请求接口的 <code>Unix</code> 时间戳。（注：强制验签的含义是：你无须开启 Ping++ 管理平台上的验签开关，只需要在管理平台上传公钥，在服务端代码中设置私钥，就可以直接验签。）</li>
</ul>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id  
<em>string</em></td>
<td>由 Ping++ 生成的批量企业付款对象 
<code>ID</code>
。</td>
</tr>
<tr>
<td>object  
<em>string</em></td>
<td>值为 "batch_transfer"。</td>
</tr>
<tr>
<td>app 
<em>string</em></td>
<td>创建批量企业付款使用的 
<code>app</code>
 对象 
<code>id</code>
，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>amount  
<em>int</em></td>
<td>批量企业付款总金额。</td>
</tr>
<tr>
<td>batch_no  
<em>string</em></td>
<td>批量企业付款批次号，3-24位，允许字母和英文。</td>
</tr>
<tr>
<td>channel 
<em>string</em></td>
<td>渠道参数，目前支持 
<code>alipay</code>
（支付宝）和 
<code>unionpay</code>
（企业付款到银行卡）。</td>
</tr>
<tr>
<td>currency  
<em>string</em></td>
<td>三位 ISO 货币代码，人民币为 
<code>cny</code>
 。</td>
</tr>
<tr>
<td>created 
<em>int</em></td>
<td>批量企业付款创建时的 
<code>Unix</code>
 时间戳。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>批量企业付款描述。</td>
</tr>
<tr>
<td>extra 
<em>hash</em></td>
<td>额外信息，当前该字段为空。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>错误消息的描述。首次请求支付宝批量企业付款成功时，该字段包含了确认付款的 
<code>URL</code>
 链接地址，仅在渠道为支付宝时有值，你需要获取该地址，在浏览器中打开并且输入支付宝商户密码才能完成批量企业付款。批量企业付款到银行卡的接口不需要输入密码。</td>
</tr>
<tr>
<td>fee 
<em>int</em></td>
<td>批量企业付款手续费。</td>
</tr>
<tr>
<td>livemode  
<em>boolean</em></td>
<td>是否处于 
<code>live</code>
 模式。</td>
</tr>
<tr>
<td>metadata  
<em>hash</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>recipients  
<em>array</em></td>
<td>接收者信息。具体参考下表的 
<code>recipients</code>
 参数说明。</td>
</tr>
<tr>
<td>status  
<em>string</em></td>
<td>批量企业付款状态。目前支持 6 种状态，pending: 处理中；succeeded: 成功；failed: 失败；partially_succeeded: 部分成功；scheduled: 待发送；canceled: 取消发送。</td>
</tr>
<tr>
<td>time_succeeded  
<em>int</em></td>
<td>成功的 
<code>Unix</code>
 时间戳。</td>
</tr>
<tr>
<td>type  
<em>string</em></td>
<td>付款类型 (当前仅支持 B2C 企业付款: b2c)。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>recipients</code> 参数说明</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>account 
<em>string</em></td>
<td>接收者支付宝账号。</td>
</tr>
<tr>
<td>amount  
<em>int</em></td>
<td>付款金额。</td>
</tr>
<tr>
<td>name  
<em>string</em></td>
<td>接收者姓名。</td>
</tr>
<tr>
<td>description 
<em>string</em></td>
<td>批量企业付款描述。</td>
</tr>
<tr>
<td>transfer  
<em>string</em></td>
<td>对应的单笔 
<code>transfer</code>
 对象 
<code>ID</code>
 。</td>
</tr>
<tr>
<td>status  
<em>string</em></td>
<td>对应的单笔 
<code>transfer</code>
 对象状态。</td>
</tr>
<tr>
<td>open_bank 
<em>string</em></td>
<td>1~50位，开户银行。</td>
</tr>
<tr>
<td>open_bank_code 
<em>string</em></td>
<td>4位，开户银行编号，详情请参考
<a href="#%E9%93%B6%E8%A1%8C%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">企业付款（银行卡）银行编号说明</a>
。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="126"><h4 id="示例对象-3">示例对象</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"181610101014367590"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_transfer"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_ribgW1n2SOqcPxn1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">8000</span>,
  <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"2016101010380007"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"alipay"</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1476067087</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"付款说明"</span>,
  <span class="hljs-attr">"extra"</span>: {},
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"fee"</span>: <span class="hljs-number">0</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"recipients"</span>: [
      {
          <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account01@alipay.com"</span>,
          <span class="hljs-attr">"amount"</span>: <span class="hljs-number">5000</span>,
          <span class="hljs-attr">"name"</span>: <span class="hljs-string">"张三"</span>,
          <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_jHWfvDnTKG0SiPmbfPbHW1eH"</span>,
          <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
      },
      {
          <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account02@alipay.com"</span>,
          <span class="hljs-attr">"amount"</span>: <span class="hljs-number">3000</span>,
          <span class="hljs-attr">"name"</span>: <span class="hljs-string">"李四"</span>,
          <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_8u1yPK1eHWv9D08OePzDe1CK"</span>,
          <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
      }
  ],
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
  <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>
}</pre>
</div></div><div data-title="创建 Batch Transfer 对象" class="keyline-top section contain clearfix " data-reactid="127"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="128"><h3 id="创建-batch-transfer-对象">创建 Batch Transfer 对象</h3>
<p>创建一个 <code>batch transfer</code> 对象来发起批量企业付款。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app  
<strong>required</strong></td>
<td>批量企业付款对应的 
<code>app</code>
 对象 
<code>id</code>
，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>batch_no 
<strong>required</strong></td>
<td>批量企业付款批次号，3-24位，允许字母和英文。</td>
</tr>
<tr>
<td>channel 
<strong>required</strong></td>
<td>渠道参数，目前支持 
<code>alipay</code>
（支付宝）和 
<code>unionpay</code>
（企业付款到银行卡）。</td>
</tr>
<tr>
<td>amount  
<strong>required</strong></td>
<td>批量企业付款总金额。</td>
</tr>
<tr>
<td>description 
<strong>required</strong></td>
<td>批量企业付款描述。</td>
</tr>
<tr>
<td>metadata  
<em>optional</em></td>
<td>参考
<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a>
。</td>
</tr>
<tr>
<td>recipients  
<strong>required</strong></td>
<td>接收者信息。具体参考下表的 支付宝批量企业付款 
<code>recipients</code>
 参数说明 和 企业付款（银行卡） 
<code>recipients</code>
 参数说明。</td>
</tr>
<tr>
<td>currency  
<em>optional</em></td>
<td>三位 ISO 货币代码，人民币为 
<code>cny</code>
 。</td>
</tr>
<tr>
<td>type  
<strong>required</strong></td>
<td>付款类型 (当前仅支持 B2C 企业付款: b2c)。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong> 支付宝批量企业付款 <code>recipients</code> 参数说明</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>account 
<strong>required</strong></td>
<td>接收者支付宝账号。</td>
</tr>
<tr>
<td>amount  
<strong>required</strong></td>
<td>付款金额。</td>
</tr>
<tr>
<td>name  
<strong>required</strong></td>
<td>接收者姓名。</td>
</tr>
<tr>
<td>description 
<em>optional</em></td>
<td>批量企业付款描述，最多 200 字节。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong> 企业付款（银行卡） <code>recipients</code> 参数说明</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>account 
<strong>required</strong></td>
<td>接收者银行卡账号。</td>
</tr>
<tr>
<td>amount  
<strong>required</strong></td>
<td>付款金额。</td>
</tr>
<tr>
<td>name  
<strong>required</strong></td>
<td>接收者姓名。</td>
</tr>
<tr>
<td>description 
<em>optional</em></td>
<td>批量企业付款描述，最多 200 字节。</td>
</tr>
<tr>
<td>open_bank 
<em>optional</em></td>
<td>1~50位，开户银行。</td>
</tr>
<tr>
<td>open_bank_code 
<em>optional</em></td>
<td>4位，开户银行编号，详情请参考
<a href="#%E9%93%B6%E8%A1%8C%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">企业付款（银行卡）银行编号说明</a>
。</td>
</tr>
</tbody>
</table>
<p><strong>注：</strong> <code>open_bank_code</code> 和 <code>open_bank</code> 两个参数必传一个，建议使用 <code>open_bank_code</code> ，若都传参则优先使用 <code>open_bank_code</code> 读取规则。</p>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch transfer</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="129"><h4 id="定义-17">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/batch_transfers</pre>
<h4 id="请求示例-20">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_transfers \
-H <span class="hljs-string">"Content-Type: application/json; charset=utf-8"</span> \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Pingplusplus-Request-Timestamp: 1476067085"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "amount": 8000,
    "app": "app_ribgW1n2SOqcPxn1",
    "batch_no": "2016101010380007",
    "channel": "alipay",
    "description": "付款说明",
    "recipients": [
        {
            "account": "account01@alipay.com",
            "amount": 5000,
            "name": "张三"
        },
        {
            "account": "account02@alipay.com",
            "amount": 3000,
            "name": "李四"
        }
    ],
    "type": "b2c"
}'</span></pre>
<h4 id="返回示例-18">返回示例</h4>
<pre class='hljs'>{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"181610101014367590"</span>,
  <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_transfer"</span>,
  <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_ribgW1n2SOqcPxn1"</span>,
  <span class="hljs-attr">"amount"</span>: <span class="hljs-number">8000</span>,
  <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"2016101010380007"</span>,
  <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"alipay"</span>,
  <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1476067087</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"付款说明"</span>,
  <span class="hljs-attr">"extra"</span>: {},
  <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"fee"</span>: <span class="hljs-number">0</span>,
  <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"metadata"</span>: {},
  <span class="hljs-attr">"recipients"</span>: [
      {
          <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account01@alipay.com"</span>,
          <span class="hljs-attr">"amount"</span>: <span class="hljs-number">5000</span>,
          <span class="hljs-attr">"name"</span>: <span class="hljs-string">"张三"</span>,
          <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_jHWfvDnTKG0SiPmbfPbHW1eH"</span>,
          <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
      },
      {
          <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account02@alipay.com"</span>,
          <span class="hljs-attr">"amount"</span>: <span class="hljs-number">3000</span>,
          <span class="hljs-attr">"name"</span>: <span class="hljs-string">"李四"</span>,
          <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_8u1yPK1eHWv9D08OePzDe1CK"</span>,
          <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
      }
  ],
  <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
  <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>
}</pre>
</div></div><div data-title="更新批量企业付款（银行卡） Batch Transfer 对象" class="keyline-top section contain clearfix " data-reactid="130"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="131"><h3 id="更新批量企业付款（银行卡）-batch-transfer-对象">更新批量企业付款（银行卡） Batch Transfer 对象</h3>
<p>更新（取消）一个 <code>batch transfer</code> 对象来取消这笔批量企业付款到银行卡。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>status 
<strong>required</strong></td>
<td>只支持 "canceled"。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个取消状态的 <code>batch transfer</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="132"><h4 id="定义-18">定义</h4>
<pre class='hljs'>PUT https://api.pingxx.com/v1/batch_transfers/{BATCH_TRANSFER_ID}</pre>
<h4 id="请求示例-21">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_transfers/181610101014367590 \
-H <span class="hljs-string">"Content-Type: application/json; charset=utf-8"</span> \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Pingplusplus-Request-Timestamp: 1476067085"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "status": "canceled"
}'</span></pre>
<h4 id="返回示例-19">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"181610101014367590"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_transfer"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_ribgW1n2SOqcPxn1"</span>,
    <span class="hljs-attr">"amount"</span>: <span class="hljs-number">8000</span>,
    <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"2016101010380007"</span>,
    <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"unionpay"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1476067087</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"付款说明"</span>,
    <span class="hljs-attr">"extra"</span>: {},
    <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"fee"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"metadata"</span>: {},
    <span class="hljs-attr">"recipients"</span>: [
        {
            <span class="hljs-attr">"account"</span>: <span class="hljs-string">"3210120312031200"</span>,
            <span class="hljs-attr">"amount"</span>: <span class="hljs-number">5000</span>,
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"张三"</span>,
            <span class="hljs-attr">"open_bank"</span>: <span class="hljs-string">"招商银行"</span>,
            <span class="hljs-attr">"open_bank_code"</span>: <span class="hljs-string">"0308"</span>,
            <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_jHWfvDnTKG0SiPmbfPbHW1eH"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"canceled"</span>
        },
        {
            <span class="hljs-attr">"account"</span>: <span class="hljs-string">"321012031212031200"</span>,
            <span class="hljs-attr">"amount"</span>: <span class="hljs-number">3000</span>,
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"李四"</span>,
            <span class="hljs-attr">"open_bank"</span>: <span class="hljs-string">"招商银行"</span>,
            <span class="hljs-attr">"open_bank_code"</span>: <span class="hljs-string">"0308"</span>,
            <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_8u1yPK1eHWv9D08OePzDe1CK"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"canceled"</span>
        }
    ],
    <span class="hljs-attr">"status"</span>: <span class="hljs-string">"canceled"</span>,
    <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>
}</pre>
</div></div><div data-title="查询 Batch Transfer 对象" class="keyline-top section contain clearfix " data-reactid="133"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="134"><h3 id="查询-batch-transfer-对象">查询 Batch Transfer 对象</h3>
<p>你可以使用 <code>batch_transfer_id</code> 来查询对应的 <code>batch transfer</code> 对象信息。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>批量企业付款对象 
<code>id</code>
，由 Ping++ 生成。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch transfer</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="135"><h4 id="定义-19">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/batch_transfers/{BATCH_TRANSFER_ID}</pre>
<h4 id="请求示例-22">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_transfers/181610101014367590 \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Pingplusplus-Request-Timestamp: 1476067095"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-20">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"1818282929292221323"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"batch_transfer"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_ribgW1n2SOqcPxn1"</span>,
    <span class="hljs-attr">"amount"</span>: <span class="hljs-number">8000</span>,
    <span class="hljs-attr">"batch_no"</span>: <span class="hljs-string">"1231231231"</span>,
    <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"alipay"</span>,
    <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1111111</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"付款说明"</span>,
    <span class="hljs-attr">"extra"</span>: {},
    <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"fee"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"metadata"</span>: {},
    <span class="hljs-attr">"recipients"</span>: [
        {
            <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account01@alipay.com"</span>,
            <span class="hljs-attr">"amount"</span>: <span class="hljs-number">5000</span>,
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"张三"</span>,
            <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_jHWfvDnTKG0SiPmbfPbHW1eH"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
        },
        {
            <span class="hljs-attr">"account"</span>: <span class="hljs-string">"account02@alipay.com"</span>,
            <span class="hljs-attr">"amount"</span>: <span class="hljs-number">3000</span>,
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"李四"</span>,
            <span class="hljs-attr">"transfer"</span>: <span class="hljs-string">"tr_8u1yPK1eHWv9D08OePzDe1CK"</span>,
            <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>
        }
    ],
    <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
    <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-number">123123123</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"b2c"</span>
}</pre>
</div></div><div data-title="查询 Batch Transfer 对象列表" class="keyline-top section contain clearfix " data-reactid="136"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="137"><h3 id="查询-batch-transfer-对象列表">查询 Batch Transfer 对象列表</h3>
<p>你可以使用调用该接口来查询对应的 <code>batch transfer</code> 对象列表信息。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>page 
<em>optional</em>
 
<em>int</em></td>
<td>页码，取值范围：1~1000000000；默认值为"1"。</td>
</tr>
<tr>
<td>per_page 
<em>optional</em>
 
<em>int</em></td>
<td>每页数量，取值范围：1～100；默认值为"10"。</td>
</tr>
<tr>
<td>created
[
gt
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间大于该值。</td>
</tr>
<tr>
<td>created
[
gte
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间大于或等于该值。</td>
</tr>
<tr>
<td>created
[
lt
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间小于该值。</td>
</tr>
<tr>
<td>created
[
lte
]
  
<em>optional</em>
 
<em>int</em></td>
<td>创建时间小于或等于该值。</td>
</tr>
<tr>
<td>app  
<strong>required</strong></td>
<td>批量企业付款对应的 app 对象 ID，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>batch transfer</code> 对象列表或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="138"><h4 id="定义-20">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/batch_transfers?app={app_id}</pre>
<h4 id="请求示例-23">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/batch_transfers?app=app_ribgW1n2SOqcPxn1&amp;per_page=3 \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Pingplusplus-Request-Timestamp: 1476067095"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-21">返回示例</h4>
<pre class='hljs'>{
    "object": "list",
    "url": "/v1/batch_transfers",
    "has_more": true,
    "data": [
        {
            "id": "181610101014367590",
            "object": "batch_transfer",
            "app": "app_ribgW1n2SOqcPxn1",
            "amount": 8000,
            "batch_no": "2016101010380007",
            "channel": "alipay",
            "currency": "cny",
            "created": 1476067087,
            "description": "付款说明",
            "extra": {},
            "failure_msg": null,
            "fee": 0,
            "livemode": true,
            "metadata": {},
            "recipients": [
                {
                    "account": "account01@alipay.com",
                    "amount": 5000,
                    "name": "张三",
                    "transfer": "tr_jHWfvDnTKG0SiPmbfPbHW1eH",
                    "status": "pending"
                },
                {
                    "account": "account02@alipay.com",
                    "amount": 3000,
                    "name": "李四",
                    "transfer": "tr_8u1yPK1eHWv9D08OePzDe1CK",
                    "status": "pending"
                }
            ],
            "status": "pending",
            "time_succeeded": null,
            "type": "b2c"
        },
        {...},
        {...}
    ]
}</pre>
</div></div><div data-title="身份证银行卡信息认证接口" class="keyline-top section contain clearfix " data-reactid="139"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="140"><h2 id="身份证银行卡信息认证接口">身份证银行卡信息认证接口</h2>
<p>独立的第三方接口，根据用户的姓名、身份证号、银行卡号、手机号，鉴别其身份真伪。此接口按照调用次数<a href="https://dashboard.pingxx.com/pricing">累加计费</a>，并且调用成功即产生费用（无论认证成功与否）。使用时请预先进行<a href="https://dashboard.pingxx.com/finance/account">账户充值</a>。<strong>注意：此接口强制要求<a href="https://help.pingxx.com/article/1016785">签名</a>（Pingplusplus-Signature），需在管理平台上<a href="https://help.pingxx.com/article/123161">配置商户公钥</a>，但无须开启。</strong></p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>type 
<em>string</em></td>
<td>身份证信息或者银行卡信息串，取值范围:"id_card"（身份证信息串）；"bank_card"（银行卡信息串）。</td>
</tr>
<tr>
<td>app  
<em>string</em></td>
<td>应用 ID，
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>result_code 
<em>int</em></td>
<td>返回码，详情请参照API文档附录的
<a href="#%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3-result_code-%E8%AF%B4%E6%98%8E">认证接口result_code说明</a>
。</td>
</tr>
<tr>
<td>message 
<em>string</em></td>
<td>描述信息，接口调用失败时为错误描述，成功时为 "SUCCESS" 。</td>
</tr>
<tr>
<td>paid 
<em>boolean</em></td>
<td>是否已扣款，扣款为 
<code>true</code>
 ，未扣款为 
<code>false</code>
 。</td>
</tr>
<tr>
<td>data 
<em>map</em></td>
<td>验证数据，包含参数见下表。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>data包含参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id_name 
<em>string</em></td>
<td>身份证姓名(1~16位)；</td>
</tr>
<tr>
<td>id_number 
<em>string</em></td>
<td>身份证号码(15位或18位)；</td>
</tr>
<tr>
<td>card_number 
<em>string</em></td>
<td>银行卡号(12～19位) 仅在 
<code>type</code>
 参数为 "bank_card" 的时候必需要传此参数；</td>
</tr>
<tr>
<td>phone_number 
<em>string</em></td>
<td>手机号(11位) 仅在 
<code>type</code>
 参数为 "bank_card" 的时候可以选择是否传此参数，暂不支持178开头的手机号。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="141"><h4 id="示例对象-4">示例对象</h4>
<pre class='hljs'>{
   <span class="hljs-attr">"type"</span>: <span class="hljs-string">"id_card"</span>,
   <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_LibTW1n1SOq9Pin1"</span>,
   <span class="hljs-attr">"result_code"</span>: <span class="hljs-number">0</span>,
   <span class="hljs-attr">"message"</span>: <span class="hljs-string">"SUCCESS"</span>,
   <span class="hljs-attr">"paid"</span>:<span class="hljs-literal">true</span>,
   <span class="hljs-attr">"data"</span>: {
       <span class="hljs-attr">"id_name"</span>: <span class="hljs-string">"张三"</span>,
       <span class="hljs-attr">"id_number"</span>: <span class="hljs-string">"320291198811110000"</span>
   }
}</pre>
</div></div><div data-title="请求认证接口" class="keyline-top section contain clearfix " data-reactid="142"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="143"><h3 id="请求认证接口">请求认证接口</h3>
<p>独立的第三方接口，请求该接口根据用户的姓名、身份证号、银行卡号、手机号，鉴别其身份真伪。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>type 
<strong>required</strong></td>
<td>身份证信息或者银行卡信息串，取值范围: "id_card"（身份证信息串）；"bank_card"（银行卡信息串）。</td>
</tr>
<tr>
<td>app 
<strong>required</strong></td>
<td>应用 
<code>ID</code>
，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>data 
<strong>required</strong></td>
<td>验证数据，包含参数见下表。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>data包含参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id_name  
<strong>required</strong>
 
<em>string</em></td>
<td>身份证姓名(1~16位)。</td>
</tr>
<tr>
<td>id_number 
<strong>required</strong>
 
<em>string</em></td>
<td>身份证号码(15位或18位)。</td>
</tr>
<tr>
<td>card_number 
<strong>required</strong>
 
<em>string</em></td>
<td>银行卡号(12～19位) 仅在 
<code>type</code>
 参数为 "bank_card" 的时候必须要传此参数。</td>
</tr>
<tr>
<td>phone_number 
<em>optional,string</em></td>
<td>手机号(11位) 仅在 
<code>type</code>
 参数为 "bank_card" ，的时候可以选择是否传此参数，暂不支持178开头的手机号。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>请求成功，返回 <code>result_code</code> 字段为返回码，详情参照API文档附录的认证接口 <code>result_code</code> 说明；<code>message</code> 中是错误描述信息，仅在成功时返回 <code>success</code> ; <code>paid</code> 表示本次调用接口认证是否产生费用， <code>paid</code> 为 <code>true</code> 则需要付费，<code>false</code> 不产生费用，或者返回一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="144"><h4 id="定义-21">定义</h4>
<pre class='hljs'>POST https://api.pingxx.com/v1/identification</pre>
<h4 id="请求示例-24">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/identification \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Content-Type: application/json"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "type": "bank_card",
    "app": "app_1Gqj58ynP0mHeX1q",
    "data": {
        "id_name": "张三",
        "id_number": "320291198811110000",
        "card_number": "6201111122223333"
    }
}'</span></pre>
<h4 id="返回示例-22">返回示例</h4>
<pre class='hljs'>{
   <span class="hljs-attr">"type"</span>: <span class="hljs-string">"bank_card"</span>,
   <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_1Gqj58ynP0mHeX1q"</span>,
   <span class="hljs-attr">"result_code"</span>: <span class="hljs-number">3441</span>,
   <span class="hljs-attr">"message"</span>: <span class="hljs-string">"银行卡信息认证失败"</span>,
   <span class="hljs-attr">"paid"</span>:<span class="hljs-literal">true</span>,
   <span class="hljs-attr">"data"</span>: {
       <span class="hljs-attr">"id_name"</span>: <span class="hljs-string">"张三"</span>,
       <span class="hljs-attr">"id_number"</span>: <span class="hljs-string">"320291198811110000"</span>,
       <span class="hljs-attr">"card_number"</span>: <span class="hljs-string">"6201111122223333"</span>
   }
}</pre>
</div></div><div data-title="报关接口" class="keyline-top section contain clearfix " data-reactid="145"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="146"><h2 id="报关接口">报关接口</h2>
<p>目前只针对支付成功的订单进行报关，报关金额为订单金额，<code>customs_code</code> 是海关编号字段说明，<code>trade_no</code> 区别于 charge 中的 <code>order_no</code> ，两者不能相同。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>报关对象 
<code>id</code>
 。</td>
</tr>
<tr>
<td>app 
<em>string</em></td>
<td>应用 
<code>ID</code>
，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<em>string</em></td>
<td>支付使用的第三方支付渠道，取值范围："alipay"（支付宝 APP 支付）,"wx"（微信支付）,"upacp"（银联）,"applepay_upacp"（Apple Pay）。</td>
</tr>
<tr>
<td>trade_no 
<em>string</em></td>
<td>商户报关订单号,8~20位。</td>
</tr>
<tr>
<td>customs_code 
<em>string</em></td>
<td>海关编号，详情请参照
<a href="#%E6%B5%B7%E5%85%B3%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">海关编号说明</a>
。</td>
</tr>
<tr>
<td>amount 
<em>int</em></td>
<td>报关金额,取值范围：1～1000000000。</td>
</tr>
<tr>
<td>charge 
<em>string</em></td>
<td><code>charge</code>
 对象 
<code>id</code>
 。</td>
</tr>
<tr>
<td>transport_amount 
<em>int</em></td>
<td>订单物流金额，默认为0，当 
<code>is_split</code>
 为 
<code>true</code>
 时,此参数无效。</td>
</tr>
<tr>
<td>is_split 
<em>boolean</em></td>
<td>是否拆单，默认值为"false"。</td>
</tr>
<tr>
<td>sub_order_no 
<em>string</em></td>
<td>商户子订单号，1～30位，当 
<code>is_split</code>
 为 
<code>true</code>
 时此参数必填。</td>
</tr>
<tr>
<td>extra  
<em>map</em></td>
<td>自定义参数，如果渠道为银联则需要额外参数 
<code>extra</code>
 ，详情请参考下表的 
<code>extra</code>
 参数说明。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "customs" 。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>创建时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>time_succeeded 
<em>int</em></td>
<td>处理时间，用 Unix 时间戳表示。</td>
</tr>
<tr>
<td>status 
<em>string</em></td>
<td>报关状态，
<code>pending</code>
: 处理中; 
<code>succeeded</code>
: 成功; 
<code>failed</code>
: 失败 。</td>
</tr>
<tr>
<td>failure_code 
<em>string</em></td>
<td>错误码，详见 
<a href="#%E9%94%99%E8%AF%AF">错误</a>
中的错误码描述。</td>
</tr>
<tr>
<td>failure_msg 
<em>string</em></td>
<td>错误信息描述。</td>
</tr>
<tr>
<td>transaction_no 
<em>string</em></td>
<td>渠道报关流水号。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>extra</code></strong>
 参数</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>pay_account 
<em>string</em></td>
<td>支付ID，1~60位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>certif_type 
<em>string</em></td>
<td>证件类型，取值范围参考："01"：身份证；"02"：军官证；"03"：护照；"04"：回乡证；"05"：台胞证；"06"：警官证 "07"：士兵证； "99"：其它证件。</td>
</tr>
<tr>
<td>customer_name 
<em>string</em></td>
<td>姓名，1～20位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>certif_id 
<em>string</em></td>
<td>证件号，1～30位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>tax_amount 
<em>int</em></td>
<td>税费的金额。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="147"><h4 id="示例对象-5">示例对象</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"14201607013878045463"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"customs"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_LibTW1n1SOq9Pin1"</span>,
    <span class="hljs-attr">"charge_id"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
    <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"upacp"</span>,
    <span class="hljs-attr">"trade_no"</span>: <span class="hljs-string">"15112496832609"</span>,
    <span class="hljs-attr">"customs_code"</span>: <span class="hljs-string">"GUANGZHOU"</span>,
    <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"status"</span>: <span class="hljs-string">"pending"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410834527</span>,
    <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-number">1410838127</span>,
    <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"xxxxxxxx"</span>,
    <span class="hljs-attr">"extra"</span>:{}
}</pre>
</div></div><div data-title="请求报关接口" class="keyline-top section contain clearfix " data-reactid="148"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="149"><h3 id="请求报关接口">请求报关接口</h3>
<p>请求报关接口，目前只针对支付成功的订单 <code>charge id</code> 进行报关请求，报关金额为订单金额，目前渠道限于 <code>alipay</code>, <code>wx</code> ,<code>upacp</code> 和 <code>applepay_upacp</code> 。<strong>注意：此接口强制要求<a href="https://help.pingxx.com/article/1016785">签名</a>（Pingplusplus-Signature），需在管理平台上<a href="https://help.pingxx.com/article/123161">配置商户公钥</a>，但无须开启。</strong></p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app
[
id
]
 
<strong>required</strong></td>
<td>应用 
<code>ID</code>
，查看
<a href="https://help.pingxx.com/article/198599">如何获取App ID</a>
。</td>
</tr>
<tr>
<td>channel 
<strong>required</strong></td>
<td>支付使用的第三方支付渠道，取值范围："alipay"（支付宝 APP 支付）；"wx"（微信支付）和"upacp"（银联）,"applepay_upacp"（Apple Pay）。</td>
</tr>
<tr>
<td>trade_no 
<strong>required</strong></td>
<td>商户报关订单号,8~20位。</td>
</tr>
<tr>
<td>customs_code 
<strong>required</strong></td>
<td>海关编号，详情请参照
<a href="#%E6%B5%B7%E5%85%B3%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">海关编号说明</a>
。</td>
</tr>
<tr>
<td>amount 
<strong>required</strong></td>
<td>报关金额,取值范围：1～1000000000。</td>
</tr>
<tr>
<td>charge 
<strong>required</strong></td>
<td><code>charge</code>
 对象 
<code>id</code>
 。</td>
</tr>
<tr>
<td>transport_amount 
<em>optional</em></td>
<td>订单物流金额，默认为0，当 
<code>is_split</code>
 为 
<code>true</code>
 时,此参数无效。</td>
</tr>
<tr>
<td>is_split 
<em>optional</em></td>
<td>是否拆单，默认值为"false"。</td>
</tr>
<tr>
<td>sub_order_no 
<em>optional</em></td>
<td>商户子订单号，1～30位，当 
<code>is_split</code>
 为 
<code>true</code>
 时此参数必填。</td>
</tr>
<tr>
<td>extra 
<em>optional</em></td>
<td>自定义参数，如果渠道为银联或者 
<code>Apple Pay</code>
 则需要额外参数 
<code>extra</code>
 ，详情请参考下表的 
<code>extra</code>
 参数说明。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong><code>extra</code></strong>
 参数</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>pay_account 
<strong>required</strong></td>
<td>支付ID，1~60位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>certif_type 
<strong>required</strong></td>
<td>证件类型，取值范围参考："01"：身份证；"02"：军官证；"03"：护照；"04"：回乡证；"05"：台胞证；"06"：警官证 "07"：士兵证； "99"：其它证件。</td>
</tr>
<tr>
<td>customer_name 
<strong>required</strong></td>
<td>姓名，1～20位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>certif_id 
<strong>required</strong></td>
<td>证件号，1～30位，字母、数字和/或特殊符号字符。</td>
</tr>
<tr>
<td>tax_amount 
<em>optional</em></td>
<td>税费的金额。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个 <code>customs</code> 报关对象，或者返回一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="150"><h4 id="定义-22">定义</h4>
<pre class='hljs'>  POST https://api.pingxx.com/v1/customs</pre>
<h4 id="请求示例-25">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/customs \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-H <span class="hljs-string">"Content-Type: application/json"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \
<span class="hljs-_">-d</span> <span class="hljs-string">'{
    "app":"App ID",
    "charge":"Charge ID",
    "channel": "upacp",
    "trade_no": "15112496832609",
    "customs_code":"GUANGZHOU",
    "amount":100,
    "transport_amount": 10,
    "is_split": true,
    "sub_order_no": "123456",
    "extra":{
        "pay_account": "1234567890",
        "certif_type": "02",
        "customer_name": "A Name",
        "certif_id": "ID Card No",
        "tax_amount":"10"
    }
}'</span></pre>
<h4 id="返回示例-23">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"14201607013878045463"</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"customs"</span>,
    <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_LibTW1n1SOq9Pin1"</span>,
    <span class="hljs-attr">"charge_id"</span>: <span class="hljs-string">"ch_L8qn10mLmr1GS8e5OODmHaL4"</span>,
    <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"alipay"</span>,
    <span class="hljs-attr">"trade_no"</span>: <span class="hljs-string">"15112496832609"</span>,
    <span class="hljs-attr">"customs_code"</span>: <span class="hljs-string">"GUANGZHOU"</span>,
    <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"status"</span>: <span class="hljs-string">"succeeded"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1410834527</span>,
    <span class="hljs-attr">"time_succeeded"</span>: <span class="hljs-number">1410838127</span>,
    <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
    <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"201609061456194799218"</span>,
    <span class="hljs-attr">"extra"</span>:{}
}</pre>
</div></div><div data-title="查询报关接口" class="keyline-top section contain clearfix " data-reactid="151"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="152"><h3 id="查询报关接口">查询报关接口</h3>
<p>通过 <code>customs</code> 对象的 <code>id</code> 查询一个已创建的 <code>customs</code> 对象。通过查询接口确认报关的状态。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>报关对象 
<code>id</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>customs</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="153"><h4 id="定义-23">定义</h4>
<pre class='hljs'>  GET
https://api.pingxx.com/v1/customs/{CUSTOMS_ID}</pre>
<h4 id="请求示例-26">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/customs/14201607013878045463 \
-H <span class="hljs-string">"Pingplusplus-Signature: SIGNATURE"</span> \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC: \</pre>
<h4 id="返回示例-24">返回示例</h4>
<pre class='hljs'>报关成功：
{
    "id": "14201607013878045463",
    "object": "customs",
    "app": "app_LibTW1n1SOq9Pin1",
    "charge_id": "ch_L8qn10mLmr1GS8e5OODmHaL4",
    "channel": "alipay",
    "trade_no": "15112496832609",
    "customs_code": "GUANGZHOU",
    "amount": 100,
    "status": "succeeded",
    "created": 1410834527,
    "time_succeeded": 1410838127,
    "failure_code": null,
    "failure_msg": null,
    "transaction_no": "201609061456194799218",
    "extra":{}
}
报关失败：
{
    "id": "14201607013878045463",
    "object": "customs",
    "app": "app_LibTW1n1SOq9Pin1",
    "charge_id": "ch_L8qn10mLmr1GS8e5OODmHaL4",
    "channel": "alipay",
    "trade_no": "15112496832609",
    "customs_code": "GUANGZHOU",
    "amount": 100,
    "status": "failed",
    "created": 1410834527,
    "failure_msg": "报关失败",
    "transaction_no": null,
    "extra":{}
}</pre>
</div></div><div data-title="Events 事件" class="keyline-top section contain clearfix " data-reactid="154"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="155"><h2 id="events-事件">Events 事件</h2>
<p>为了便于客户系统或者第三方系统处理客户的交易信息，Ping++ 系统支持 Webhooks 功能，可以按照客户要求把特定的事件结果推送到指定的地址以便于客户做后续处理。目前支持的事件包括周期性交易汇总信息、支付结果、红包结果、企业转账结果和退款结果。
以下是关于接收 Webhooks 通知的说明：</p>
<ul>
<li>Webhooks 是 Ping++ 和你服务器间的交互，相比页面跳转同步通知可以在页面上显示出来，这种交互方式是不可见的。</li>
<li>Webhooks 通知是以 <code>POST</code> 形式发送的 <code>JSON</code> ，放在请求的 <code>body</code> 里，内容是 <code>Event</code> 对象。</li>
<li>你需要监听并接收 Webhooks 通知，接收到 Webhooks 后需要返回服务器状态码 2xx 表示接收成功，否则请返回状态码 500。</li>
<li>若返回的服务器状态码不是 2xx，Ping++ 服务器会在 25 小时内向你的服务器不断重发通知，最多 8 次。Webhooks 首次是即时推送，重试通知时间间隔为 2min、10min、10min、1h、2h、6h、15h，直到你正确回复状态 2xx 或者超过最大重发次数，Ping++ 将不再发送。</li>
</ul>
<p>其中 <code>Event</code> 对象属性定义如下。</p>
<table>
<thead>
<tr>
<th><strong>属性</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<em>string</em></td>
<td>事件对象 
<code>id</code>
 ，由 Ping++ 生成，28 位长度字符串。</td>
</tr>
<tr>
<td>object 
<em>string</em></td>
<td>值为 "event"。</td>
</tr>
<tr>
<td>livemode 
<em>boolean</em></td>
<td>事件是否发生在生产环境。</td>
</tr>
<tr>
<td>created 
<em>timestamp</em></td>
<td>事件发生的时间。</td>
</tr>
<tr>
<td>pending_webhooks 
<em>int</em></td>
<td>推送未成功的 webhooks 数量。</td>
</tr>
<tr>
<td>type 
<em>string</em></td>
<td>事件类型，详见
<a href="#event-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B">事件类型</a>
。</td>
</tr>
<tr>
<td>request 
<em>string</em></td>
<td>API Request ID。值 "null" 表示该事件不是由 API 请求触发的。</td>
</tr>
<tr>
<td>data 
<em>hash</em></td>
<td>绑定在事件上的数据对象,具体参考下表 
<code>data</code>
 参数说明。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th><strong>data 参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>object 
<em>hash</em></td>
<td></td>
</tr>
<tr>
<td>previous_attributes 
<em>hash</em></td>
<td>绑定对象属性变化之前的值。只有 *.updated 事件有这个属性。</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="156"><h4 id="示例对象-6">示例对象</h4>
<pre class='hljs'>{
   <span class="hljs-attr">"id"</span>: <span class="hljs-string">"evt_la06CoQAiPojSgJKe5gt3nwq"</span>,
   <span class="hljs-attr">"created"</span>: <span class="hljs-number">1427555016</span>,
   <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">false</span>,
   <span class="hljs-attr">"type"</span>: <span class="hljs-string">"summary.weekly.available"</span>,
   <span class="hljs-attr">"data"</span>: {
       <span class="hljs-attr">"object"</span>: {
           <span class="hljs-attr">"app_id"</span>: <span class="hljs-string">"app_b94eHsO1avrDyL8S"</span>,
           <span class="hljs-attr">"object"</span>: <span class="hljs-string">"app_weekly_summary"</span>,
           <span class="hljs-attr">"app_display_name"</span>: <span class="hljs-string">"App Name"</span>,
           <span class="hljs-attr">"created"</span>: <span class="hljs-number">1425830460</span>,
           <span class="hljs-attr">"summary_from"</span>: <span class="hljs-number">1425225600</span>,
           <span class="hljs-attr">"summary_to"</span>: <span class="hljs-number">1425830399</span>,
           <span class="hljs-attr">"charges_amount"</span>: <span class="hljs-number">2000</span>,
           <span class="hljs-attr">"charges_count"</span> : <span class="hljs-number">200</span>
       }
   },
   <span class="hljs-attr">"object"</span>: <span class="hljs-string">"event"</span>,
   <span class="hljs-attr">"pending_webhooks"</span>: <span class="hljs-number">0</span>,
   <span class="hljs-attr">"request"</span>: <span class="hljs-literal">null</span>
}</pre>
</div></div><div data-title="Event 事件类型" class="keyline-top section contain clearfix " data-reactid="157"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="158"><h3 id="event-事件类型">Event 事件类型</h3>
<p>每个事件类型的作用域都是单个应用，目前支持的事件包括：</p>
<table>
<thead>
<tr>
<th>事件类型</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>summary.daily.available</td>
<td>上一天 0 点到 23 点 59 分 59 秒的交易金额和交易量统计，在每日 04:00 点左右触发。</td>
</tr>
<tr>
<td>summary.weekly.available</td>
<td>上周一 0 点至上周日 23 点 59 分 59 秒的交易金额和交易量统计，在每周一 04:00 点左右触发。</td>
</tr>
<tr>
<td>summary.monthly.available</td>
<td>上月一日 0 点至上月末 23 点 59 分 59 秒的交易金额和交易量统计，在每月一日 04:00 点左右触发。</td>
</tr>
<tr>
<td>charge.succeeded</td>
<td>支付对象，支付成功时触发。</td>
</tr>
<tr>
<td>refund.succeeded</td>
<td>退款对象，退款成功时触发。</td>
</tr>
<tr>
<td>transfer.succeeded</td>
<td>企业支付对象，支付成功时触发。</td>
</tr>
<tr>
<td>red_envelope.sent</td>
<td>红包对象，红包发送成功时触发。</td>
</tr>
<tr>
<td>red_envelope.received</td>
<td>红包对象，红包接收成功时触发。</td>
</tr>
<tr>
<td>batch_transfer.succeeded</td>
<td>批量企业付款对象，批量企业付款成功时触发。</td>
</tr>
<tr>
<td>customs.succeeded</td>
<td>报关对象，报关成功时触发。</td>
</tr>
<tr>
<td>batch_refund.succeeded</td>
<td>批量退款对象，批量退款成功时触发。</td>
</tr>
</tbody>
</table>
<p>右边是具体的 json 字符串展示针对 App 对象的各交易汇总事件类型的数据格式。
当事件类型为 <code>summary.daily.available</code> 、<code>summary.weekly.available</code> 、<code>summary.monthly.available</code> 的时候， <code>data</code> 中的 <code>object</code> 为 <code>App</code> 对象。</p>
<table>
<thead>
<tr>
<th>App 日/周/月统计对象主要字段定义如下：</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>app_id</td>
<td>应用 
<code>ID</code>
 。</td>
</tr>
<tr>
<td>object</td>
<td>对象类型。</td>
</tr>
<tr>
<td>app_display_name</td>
<td>应用名称。</td>
</tr>
<tr>
<td>created</td>
<td>创建时间（timestamp）。</td>
</tr>
<tr>
<td>summary_from</td>
<td>统计起始时间（timestamp）。</td>
</tr>
<tr>
<td>summary_to</td>
<td>统计终止时间（timestamp）。</td>
</tr>
<tr>
<td>charges_amount</td>
<td>交易金额（单位：分）。</td>
</tr>
<tr>
<td>charges_count</td>
<td>交易量（笔）。</td>
</tr>
</tbody>
</table>
<p>当事件类型为 <code>charge.succeeded</code> 、<code>refund.succeeded</code> 、<code>transfer.succeeded</code>、<code>customs</code>、<code>batch_transfer.succeeded</code>、<code>batch_refund.succeeded</code> 和 <code>red_envelope.sent</code> 、<code>red_envelope.received</code> 的时候，<code>data</code> 中的 <code>object</code> 分别为 <a href="#charges-%E6%94%AF%E4%BB%98">charge</a>、<a href="#refunds-%E9%80%80%E6%AC%BE">refund</a>、<a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">transfer</a>、<a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">customs</a>、<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">batch transfer</a>、<a href="#batch-refunds-%E6%89%B9%E9%87%8F%E9%80%80%E6%AC%BE">batch refund</a> 和 <a href="#red-envelopes-%E7%BA%A2%E5%8C%85">red_envelope</a> 对象。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="159"><h4 id="示例对象-7">示例对象</h4>
<pre class='hljs'>事件类型为 summary.daily.available :
{
    "id": "evt_ugB6x3K43D16wXCcqbplWAJo",
    "created": 1427555016,
    "livemode": false,
    "type": "summary.daily.available",
    "data": {
        "object": {
            "app_id": "app_b94eHsO1avrDyL8S",
            "object": "app_daily_summary",
            "app_display_name": "App Name",
            "created": 1425139260,
            "summary_from": 1425052800,
            "summary_to": 1425139199,
            "charges_amount": 1000,
            "charges_count" : 100
        }
    },
    "object": "event",
    "pending_webhooks": 0,
    "request": null
}
事件类型为 summary.weekly.available :
{
    "id": "evt_la06CoQAiPojSgJKe5gt3nwq",
    "created": 1427555016,
    "livemode": false,
    "type": "summary.weekly.available",
    "data": {
        "object": {
            "app_id": "app_b94eHsO1avrDyL8S",
            "object": "app_weekly_summary",
            "app_display_name": "App Name",
            "created": 1425830460,
            "summary_from": 1425225600,
            "summary_to": 1425830399,
            "charges_amount": 2000,
            "charges_count" : 200
        }
    },
    "object": "event",
    "pending_webhooks": 0,
    "request": null
}
事件类型为 summary.monthly.available :
{
    "id": "evt_hpyVxo7LNvTqS93kpJgfWAFR",
    "created": 1427555016,
    "livemode": false,
    "type": "summary.monthly.available",
    "data": {
        "object": {
            "app_id": "app_b94eHsO1avrDyL8S",
            "object": "app_monthly_summary",
            "app_display_name": "App Name",
            "created": 1425139260,
            "summary_from": 1422720000,
            "summary_to": 1425139199,
            "charges_amount": 3000,
            "charges_count" : 300
        }
    },
    "object": "event",
    "pending_webhooks": 0,
    "request": null
}
事件类型为 charge.succeeded :
{
    "id": "evt_ugB6x3K43D16wXCcqbplWAJo",
    "created": 1427555101,
    "livemode": true,
    "type": "charge.succeeded",
    "data": {
        "object": {
            "id": "ch_Xsr7u35O3m1Gw4ed2ODmi4Lw",
            "object": "charge",
            "created": 1427555076,
            "livemode": true,
            "paid": true,
            "refunded": false,
            "app": "app_1Gqj58ynP0mHeX1q",
            "channel": "upacp",
            "order_no": "123456789",
            "client_ip": "127.0.0.1",
            "amount": 100,
            "amount_settle": 100,
            "currency": "cny",
            "subject": "Your Subject",
            "body": "Your Body",
            "extra": {},
            "time_paid": 1427555101,
            "time_expire": 1427641476,
            "time_settle": null,
            "transaction_no": "1224524301201505066067849274",
            "refunds": {
                "object": "list",
                "url": "/v1/charges/ch_L8qn10mLmr1GS8e5OODmHaL4/refunds",
                "has_more": false,
                "data": []
            },
            "amount_refunded": 0,
            "failure_code": null,
            "failure_msg": null,
            "metadata": {},
            "credential": {},
            "description": null
        }
    },
    "object": "event",
    "pending_webhooks": 0,
    "request": "iar_qH4y1KbTy5eLGm1uHSTS00s"
}
事件类型为 refund.succeeded :
{
    "id": "evt_gJKelawq06CiPojS5gt3noQA",
    "created": 1427555348,
    "livemode": true,
    "type": "refund.succeeded",
    "data": {
        "object": {
            "id": "re_SG0mnjTD3jAHimbvDKjnXLC9",
            "object": "refund",
            "order_no": "SG0mnjTD3jAHimbvDKjnXLC9",
            "amount": 100,
            "created": 1427555346,
            "succeed": true,
            "status": "succeeded",
            "time_succeed": 1427555348,
            "description": "Refund Description",
            "failure_code": null,
            "failure_msg": null,
            "metadata": {},
            "charge": "ch_Xsr7u35O3m1Gw4ed2ODmi4Lw"
        }
    },
    "object": "event",
    "pending_webhooks": 0,
    "request": "iar_Ca1Oe10OqTSOPOmzX9Hi1a5"
}
事件类型为 transfer.succeeded :
{
    "id": "evt_NMO13SJt1jrOaxRMhXC4wj0k",
    "created": 1435752329,
    "type": "transfer.succeeded",
    "livemode": true,
    "object": "event",
    "data": {
        "object": {
            "id": "tr_fXTq1OHufjHOvbDiPG0qTSiP",
            "object": "transfer",
            "type": "b2c",
            "created": 1435752318,
            "time_transferred": 1435752318,
            "livemode": true,
            "status": "paid",
            "app": "app_1234567890abcDEF",
            "channel": "wx_pub",
            "order_no": "123456789",
            "amount": 1,
            "amount_settle": 1,
            "currency": "cny",
            "recipient": "Openid",
            "description": "Your Description",
            "transaction_no": "1010018301201507010307923793",
            "extra": {
                "user_name": "User Name",
                "force_check": true
            }
        }
    },
    "pending_webhooks": 0,
    "request": "iar_TqvPiDH8SGeHm5GaTKbLuDWL"
}
事件类型为 red_envelope.sent :
{
    "id": "evt_5BpbV0tYK4ySvodDG2RT6XRq",
    "created": 1436855491,
    "type": "red_envelope.sent",
    "livemode": true,
    "object": "event",
    "data": {
        "object": {
            "id": "red_z1O8iLmXXXX5uPqLiDzLCavP",
            "object": "red_envelope",
            "created": 1436855474,
            "received": null,
            "refunded": null,
            "livemode": true,
            "status": "sent",
            "app": "app_1234567890abcDEF",
            "channel": "wx_pub",
            "order_no": "123456789",
            "transaction_no": "0010037269201507140154722852",
            "amount": 100,
            "amount_settle": 100,
            "currency": "cny",
            "recipient": "Openid",
            "subject": "Your Subject",
            "body": "Your Body",
            "description": "Your Description",
            "extra": {
                "nick_name": "Nick Name",
                "send_name": "Send Name"
            }
        }
    },
    "pending_webhooks": 0,
    "request": "iar_zjLGC8zfLOS8WPS0WLi14ynD"
}
事件类型为 red_envelope.received :
{
    "id": "evt_hMGV2eR15fMupHUdDYibhLxe",
    "object": "event",
    "type": "red_envelope.received",
    "livemode": true,
    "created": 1436753800,
    "data": {
        "object": {
            "id": "red_4qLGO84GaXHOWTSO80mLO8i9",
            "object": "red_envelope",
            "created": 1436753573,
            "received": null,
            "refunded": null,
            "livemode": true,
            "status": "received",
            "app": "app_1234567890abcDEF",
            "channel": "wx_pub",
            "order_no": "123456789",
            "transaction_no": "0010037269201507130153706663",
            "amount": 100,
            "amount_settle": 100,
            "currency": "cny",
            "recipient": "Openid",
            "subject": "Your Subject",
            "body": "Your Body",
            "description": "Your Description",
            "extra": {
                "nick_name": "Nick Name",
                "send_name": "Send Name"
            }
        }
    },
    "pending_webhooks": 0,
    "request": "iar_jf1iT0fT0a18v1u5qDvb1uDS"
}
 事件类型为 batch_transfer.succeeded :
{
    "id": "evt_ca16CoQsiP2ja1JKs5gx3j4q",
    "object": "event",
    "created": 1475924802,
    "livemode": false,
    "data": {
        "object": {
            "id": "181610101014367590",
            "object": "batch_transfer",
            "app": "app_ribgW1n2SOqcPxn1",
            "amount": 8000,
            "batch_no": "2016101010380007",
            "channel": "alipay",
            "currency": "cny",
            "created": 1476067087,
            "description": "付款说明",
            "extra": {},
            "failure_msg": null,
            "fee": 200,
            "livemode": true,
            "metadata": {},
            "recipients": [
                {
                    "account": "account01@alipay.com",
                    "amount": 5000,
                    "name": "张三",
                    "transfer": "tr_jHWfvDnTKG0SiPmbfPbHW1eH",
                    "status": "paid"
                },
                {
                    "account": "account02@alipay.com",
                    "amount": 3000,
                    "name": "李四",
                    "transfer": "tr_8u1yPK1eHWv9D08OePzDe1CK",
                    "status": "paid"
                }
            ],
            "status": "succeeded",
            "time_succeeded": 1476067147,
            "type": "b2c"
        }
    },
    "pending_webhooks": 0,
    "request": "iar_1KeD0GHi58yLfDyHK4HCOyDS",
    "type": "batch_transfer.succeeded"
}
 事件类型为 customs.succeeded :
 {
    "id": "evt_14201611031154010770",
    "created": 1478145460,
    "livemode": true,
    "type": "customs.succeeded",
    "data": {
        "object": {
        "amount": 999999,
        "app_id": "app_LibTW1n1xxxxxxxx",
        "channel": "upacp",
        "charge_id": "ch_XLGWTCnn5iPCWz0LK4yjfbv1",
        "created": 1478145241,
        "customs_code": "GUANGZHOU",
            "extra": {
                "certif_id": "41282119910910xxxx",
                "certif_type": "01",
                "customer_name": "张小明",
                "pay_account": "张小明",
                "tax_amount": "101"
              },
        "id": "14201611031154019772",
        "is_split": true,
        "object": "customs",
        "status": "succeeded",
        "sub_order_no": "P327932738",
        "time_succeeded": 1478145460,
        "trade_no": "37878347380",
        "transaction_no": "12345678",
        "transport_amount": 0
        }
    },
        "object": "event",
        "request": "",
        "pending_webhooks": 0
}
 事件类型为 batch_refund.succeeded :
 {
  "id": "evt_401170207171021000437700",
  "created": 1486458621,
  "livemode": true,
  "type": "batch_refund.succeeded",
  "data": {
      "object": {
      "app": "app_LibTW1n1SOq9Pin1",
      "batch_no": "467223445889520",
      "charges": [
        {
          "charge": "ch_Pi504CajrLyHLSCOOKpyXnX5",
          "status": "succeeded"
        },
        {
          "charge": "ch_CWDKSKbvHq981TSOO8uk0Se5",
          "status": "succeeded"
        },
        {
          "charge": "ch_9ejPy94qj519bTejT8u1X9GC",
          "status": "succeeded"
        }
      ],
      "created": 1486458591,
      "description": "Batch refund description.",
      "id": "1511702071709512304",
      "livemode": true,
      "metadata": {},
      "object": "batch_refund",
      "refund_url": null,
      "refunds": {
        "data": [
          {
            "amount": 5,
            "charge": "ch_CWDKSKbvHq983TSOO8u00Se5",
            "charge_order_no": "T170207050849Sh",
            "created": 1486458594,
            "description": "Batch refund description.",
            "failure_code": null,
            "failure_msg": null,
            "id": "re_rLWHWHKajPu9urPqvPmnrbrP",
            "metadata": {},
            "object": "refund",
            "order_no": "rLWHWHKajPu9urPqvPmnrbrP",
            "status": "succeeded",
            "succeed": true,
            "time_succeed": 1486458602,
            "transaction_no": "2000000001001702070816030296"
          },
          {
            "amount": 5,
            "charge": "ch_9ejPy94qj5u9bTej08uzX9GC",
            "charge_order_no": "T170207050840eA",
            "created": 1486458595,
            "description": "Batch refund description.",
            "failure_code": null,
            "failure_msg": null,
            "id": "re_rbTGi11yDKqP0ujnL4mnPinP",
            "metadata": {},
            "object": "refund",
            "order_no": "rbTGi11yDKqP0ujnL4mnPinP",
            "status": "succeeded",
            "succeed": true,
            "time_succeed": 1486458604,
            "transaction_no": "2700002001201700370816029893"
          },
          {
            "amount": 5,
            "charge": "ch_Pi504CajrLyHLSCOO0DyXnX5",
            "charge_order_no": "T170207050857df",
            "created": 1486458596,
            "description": "Batch refund description.",
            "failure_code": null,
            "failure_msg": null,
            "id": "re_n9SCCCy9WL00inz5WPazX94S",
            "metadata": {},
            "object": "refund",
            "order_no": "n9SCCCy9WL00inz5WPazX94S",
            "status": "succeeded",
            "succeed": true,
            "time_succeed": 1486458604,
            "transaction_no": "2000002001201702071815736474"
          }
        ],
        "has_more": false,
        "object": "list",
        "url": null
      },
      "status": "succeeded",
      "time_succeeded": 1486458621
    }
  },
  "object": "event",
  "request": "iar_rDmfnTyb5ab1z61SOO9qPSKS",
  "pending_webhooks": 0
}</pre>
</div></div><div data-title="查询 Event 对象" class="keyline-top section contain clearfix " data-reactid="160"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="161"><h3 id="查询-event-对象">查询 Event 对象</h3>
<p>通过 <code>event</code> 对象的 <code>id</code> 查询一个已创建的 <code>event</code> 对象。</p>
<table>
<thead>
<tr>
<th><strong>请求参数</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>id 
<strong>required</strong></td>
<td>事件 
<code>id</code>
 。</td>
</tr>
</tbody>
</table>
<p><strong>返回</strong></p>
<p>返回一个已存在的 <code>event</code> 对象或者一个错误，详见 <a href="#%E9%94%99%E8%AF%AF">错误</a>。</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-dark space-top5 right-content dark" data-reactid="162"><h4 id="定义-24">定义</h4>
<pre class='hljs'>GET https://api.pingxx.com/v1/events/{EVENT_ID}</pre>
<h4 id="请求示例-27">请求示例</h4>
<pre class='hljs'>curl https://api.pingxx.com/v1/events/evt_lqVSy5gbL0A68pS8YKvJzdWZ \
-u sk_test_ibbTe5jLGCi5rzfH4OqPW9KC:</pre>
<h4 id="返回示例-25">返回示例</h4>
<pre class='hljs'>{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"evt_lqVSy5gbL0A68pS8YKvJzdWZ"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-number">1430915345</span>,
    <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"object"</span>: <span class="hljs-string">"event"</span>,
    <span class="hljs-attr">"data"</span>: {
        <span class="hljs-attr">"object"</span>: {
            <span class="hljs-attr">"id"</span>: <span class="hljs-string">"ch_ebT0y9iPGCKCL0aPy9X1WLmT"</span>,
            <span class="hljs-attr">"object"</span>: <span class="hljs-string">"charge"</span>,
            <span class="hljs-attr">"created"</span>: <span class="hljs-number">1430915284</span>,
            <span class="hljs-attr">"livemode"</span>: <span class="hljs-literal">true</span>,
            <span class="hljs-attr">"paid"</span>: <span class="hljs-literal">true</span>,
            <span class="hljs-attr">"refunded"</span>: <span class="hljs-literal">false</span>,
            <span class="hljs-attr">"app"</span>: <span class="hljs-string">"app_Xz9iXLn9ebX1SOe1"</span>,
            <span class="hljs-attr">"channel"</span>: <span class="hljs-string">"wx"</span>,
            <span class="hljs-attr">"order_no"</span>: <span class="hljs-string">"as223af2ds"</span>,
            <span class="hljs-attr">"client_ip"</span>: <span class="hljs-string">"127.0.0.1"</span>,
            <span class="hljs-attr">"amount"</span>: <span class="hljs-number">100</span>,
            <span class="hljs-attr">"amount_settle"</span>: <span class="hljs-number">100</span>,
            <span class="hljs-attr">"currency"</span>: <span class="hljs-string">"cny"</span>,
            <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Your Subject"</span>,
            <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Your Body"</span>,
            <span class="hljs-attr">"extra"</span>: [],
            <span class="hljs-attr">"time_paid"</span>: <span class="hljs-number">1430915344</span>,
            <span class="hljs-attr">"time_expire"</span>: <span class="hljs-number">1431001684</span>,
            <span class="hljs-attr">"time_settle"</span>: <span class="hljs-literal">null</span>,
            <span class="hljs-attr">"transaction_no"</span>: <span class="hljs-string">"1001680021201505060112980000"</span>,
            <span class="hljs-attr">"refunds"</span>: {
                <span class="hljs-attr">"object"</span>: <span class="hljs-string">"list"</span>,
                <span class="hljs-attr">"url"</span>: <span class="hljs-string">"/v1/charges/ch_ebT0y9iPGCKCL0aPy9X1WLmT/refunds"</span>,
                <span class="hljs-attr">"has_more"</span>: <span class="hljs-literal">false</span>,
                <span class="hljs-attr">"data"</span>: []
            },
            <span class="hljs-attr">"amount_refunded"</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">"failure_code"</span>: <span class="hljs-literal">null</span>,
            <span class="hljs-attr">"failure_msg"</span>: <span class="hljs-literal">null</span>,
            <span class="hljs-attr">"metadata"</span>: [],
            <span class="hljs-attr">"credential"</span>: [],
            <span class="hljs-attr">"description"</span>: <span class="hljs-literal">null</span>
        }
    },
    <span class="hljs-attr">"pending_webhooks"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"charge.succeeded"</span>,
    <span class="hljs-attr">"request"</span>: <span class="hljs-string">"iar_0K8m90CCeDK8PabXD00yfTq"</span>
}</pre>
</div></div><div data-title="支付渠道属性值" class="keyline-top section contain clearfix " data-reactid="163"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="164"><h2 id="支付渠道属性值">支付渠道属性值</h2>
<p>下面为支付渠道 <code>channel</code> 属性值和其对应的支付渠道名称。</p>
<table>
<thead>
<tr>
<th><strong>channel属性值</strong></th>
<th><strong>支付渠道名称</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>alipay</td>
<td>支付宝 APP 支付</td>
</tr>
<tr>
<td>alipay_wap</td>
<td>支付宝手机网页支付</td>
</tr>
<tr>
<td>alipay_pc_direct</td>
<td>支付宝电脑网站支付</td>
</tr>
<tr>
<td>alipay_qr</td>
<td>支付宝当面付，即支付宝扫码支付</td>
</tr>
<tr>
<td>bfb</td>
<td>百度钱包移动快捷支付，即百度钱包 APP 支付</td>
</tr>
<tr>
<td>bfb_wap</td>
<td>百度钱包手机网页支付</td>
</tr>
<tr>
<td>cp_b2b</td>
<td>银联企业网银支付，即 B2B 银联 PC 网页支付</td>
</tr>
<tr>
<td>upacp</td>
<td>银联支付，即银联 APP 支付（2015 年 1 月 1 日后的银联新商户使用。若有疑问，请与 Ping++ 或者相关的收单行联系）</td>
</tr>
<tr>
<td>upacp_wap</td>
<td>银联手机网页支付（2015 年 1 月 1 日后的银联新商户使用。若有疑问，请与 Ping++ 或者相关的收单行联系）</td>
</tr>
<tr>
<td>upacp_pc</td>
<td>银联网关支付，即银联 PC 网页支付</td>
</tr>
<tr>
<td>wx</td>
<td>微信 APP 支付</td>
</tr>
<tr>
<td>wx_pub</td>
<td>微信公众号支付</td>
</tr>
<tr>
<td>wx_pub_qr</td>
<td>微信公众号扫码支付</td>
</tr>
<tr>
<td>wx_wap</td>
<td>微信 WAP 支付（此渠道仅针对特定客户开放）</td>
</tr>
<tr>
<td>wx_lite</td>
<td>微信小程序支付</td>
</tr>
<tr>
<td>yeepay_wap</td>
<td>易宝手机网页支付</td>
</tr>
<tr>
<td>jdpay_wap</td>
<td>京东手机网页支付</td>
</tr>
<tr>
<td>fqlpay_wap</td>
<td>分期乐支付</td>
</tr>
<tr>
<td>qgbc_wap</td>
<td>量化派支付</td>
</tr>
<tr>
<td>cmb_wallet</td>
<td>招行一网通</td>
</tr>
<tr>
<td>applepay_upacp</td>
<td>Apple Pay</td>
</tr>
<tr>
<td>mmdpay_wap</td>
<td>么么贷</td>
</tr>
<tr>
<td>qpay</td>
<td>QQ 钱包支付</td>
</tr>
</tbody>
</table>
</div></div><div data-title="支付渠道 extra 参数说明" class="keyline-top section contain clearfix " data-reactid="165"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="166"><h2 id="支付渠道-extra-参数说明">支付渠道 extra 参数说明</h2>
<p>特定渠道发起交易时需要的额外参数，以及部分渠道支付成功返回的额外参数。<code>alipay_qr</code> ，<code>bfb</code> ，<code>cp_b2b</code> 渠道不需要 <code>extra</code> 参数。</p>
<p><strong>alipay 支付宝 APP 支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>extern_token 
<em>optional, string</em></td>
<td>开放平台返回的包含账户信息的 token（授权令牌，商户在一定时间内对支付宝某些服务的访问权限）。通过授权登录后获取的 
<code>alipay_open_id</code>
 ，作为该参数的 
<code>value</code>
 ，登录授权账户即会为支付账户，32 位字符串。</td>
</tr>
<tr>
<td>rn_check 
<em>optional, string</em></td>
<td>是否发起实名校验，T 代表发起实名校验；F 代表不发起实名校验。</td>
</tr>
<tr>
<td>buyer_account 
<em>response-only, string</em></td>
<td>支付完成将额外返回付款用户的支付宝账号。</td>
</tr>
</tbody>
</table>
<p><strong>alipay_wap 支付宝手机网页支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>success_url  
<strong>required</strong>
 
<em>string</em></td>
<td>支付成功的回调地址。</td>
</tr>
<tr>
<td>cancel_url 
<em>optional, string</em></td>
<td>支付取消的回调地址，
<code>app_pay</code>
 为true时，该字段无效。</td>
</tr>
<tr>
<td>new_version 
<em>optional,boolean</em></td>
<td>2016 年 6 月 16 日之前登录 Ping++ 管理平台填写支付宝手机网站的渠道参数的旧接口商户，需要更新接口时设置此参数值为true，6月16号后接入的新接口商户不需要设置该参数。</td>
</tr>
<tr>
<td>app_pay 
<em>optional,boolean</em></td>
<td>是否使用支付宝客户端支付，该参数为true时，调用客户端支付。</td>
</tr>
<tr>
<td>buyer_account 
<em>response-only, string</em></td>
<td>支付完成将额外返回付款用户的支付宝账号。</td>
</tr>
</tbody>
</table>
<p><strong>alipay_pc_direct 支付宝电脑网站支付</strong> </p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>success_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付成功的回调地址。</td>
</tr>
<tr>
<td>enable_anti_phishing_key 
<em>optional,boolean</em></td>
<td>是否开启防钓鱼网站的验证参数（如果已申请开通防钓鱼时间戳验证，则此字段必填）</td>
</tr>
<tr>
<td>exter_invoke_ip 
<em>optional, string</em></td>
<td>客户端 IP ，用户在创建交易时，该用户当前所使用机器的IP（如果商户申请后台开通防钓鱼IP地址检查选项，此字段必填，校验用）。</td>
</tr>
<tr>
<td>buyer_account 
<em>response-only, string</em></td>
<td>支付完成将额外返回付款用户的支付宝账号。</td>
</tr>
</tbody>
</table>
<p><strong>bfb_wap 百度钱包手机网页支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>result_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付完成的回调地址。</td>
</tr>
<tr>
<td>bfb_login 
<strong>required</strong>
 
<em>boolean</em></td>
<td>是否需要登录百度钱包来进行支付。</td>
</tr>
</tbody>
</table>
<p><strong>upacp 银联 APP 支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pay_type 
<em>response-only, string</em></td>
<td>0001：认证支付 0002：快捷支付 0004：储值卡支付 0005：IC卡支付 0201：网银支付 1001：牡丹畅通卡支付 1002：中铁银通卡支付 0401：信用卡支付 0402：小额临时支付 0403：认证支付 2.0 0404：互联网订单手机支付 9000：其他无卡支付(如手机客户端支付)。</td>
</tr>
<tr>
<td>acc_no 
<em>response-only, string</em></td>
<td>银行卡号（已打码）。</td>
</tr>
<tr>
<td>pay_card_type 
<em>response-only, string</em></td>
<td>00：未知 01：借记账户 02：贷记账户 03：准贷记账户 04：借贷合一账户 05：预付费账户 06：半开放预付费账户。</td>
</tr>
</tbody>
</table>
<p><strong>upacp_wap 银联全渠道手机网页支付 </strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>result_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付完成的回调地址。</td>
</tr>
<tr>
<td>pay_type 
<em>response-only, string</em></td>
<td>0001：认证支付 0002：快捷支付 0004：储值卡支付 0005：IC卡支付 0201：网银支付 1001：牡丹畅通卡支付 1002：中铁银通卡支付 0401：信用卡支付 0402：小额临时支付 0403：认证支付 2.0 0404：互联网订单手机支付 9000：其他无卡支付(如手机客户端支付)。</td>
</tr>
<tr>
<td>acc_no 
<em>response-only, string</em></td>
<td>银行卡号（已打码）。</td>
</tr>
<tr>
<td>pay_card_type 
<em>response-only, string</em></td>
<td>00：未知 01：借记账户 02：贷记账户 03：准贷记账户 04：借贷合一账户 05：预付费账户 06：半开放预付费账户。</td>
</tr>
</tbody>
</table>
<p><strong>upacp_pc 银联 PC 网页支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>result_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付完成的回调地址。</td>
</tr>
<tr>
<td>pay_type 
<em>response-only, string</em></td>
<td>0001：认证支付 0002：快捷支付 0004：储值卡支付 0005：IC卡支付 0201：网银支付 1001：牡丹畅通卡支付 1002：中铁银通卡支付 0401：信用卡支付 0402：小额临时支付 0403：认证支付 2.0 0404：互联网订单手机支付 9000：其他无卡支付(如手机客户端支付)。</td>
</tr>
<tr>
<td>acc_no 
<em>response-only, string</em></td>
<td>银行卡号（已打码）。</td>
</tr>
<tr>
<td>pay_card_type 
<em>response-only, string</em></td>
<td>00：未知 01：借记账户 02：贷记账户 03：准贷记账户 04：借贷合一账户 05：预付费账户 06：半开放预付费账户。</td>
</tr>
</tbody>
</table>
<p><strong>applepay_upacp Apple Pay支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pay_type 
<em>response-only, string</em></td>
<td>0001：认证支付 0002：快捷支付 0004：储值卡支付 0005：IC卡支付 0201：网银支付 1001：牡丹畅通卡支付 1002：中铁银通卡支付 0401：信用卡支付 0402：小额临时支付 0403：认证支付 2.0 0404：互联网订单手机支付 9000：其他无卡支付(如手机客户端支付)。</td>
</tr>
<tr>
<td>acc_no 
<em>response-only, string</em></td>
<td>银行卡号（已打码）。</td>
</tr>
<tr>
<td>pay_card_type 
<em>response-only, string</em></td>
<td>00：未知 01：借记账户 02：贷记账户 03：准贷记账户 04：借贷合一账户 05：预付费账户 06：半开放预付费账户。</td>
</tr>
</tbody>
</table>
<p><strong>wx 微信支付</strong> </p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>limit_pay 
<em>optional,string</em></td>
<td>指定支付方式，指定不能使用信用卡支付可设置为 
<code>no_credit</code>
。</td>
</tr>
<tr>
<td>goods_tag 
<em>optional,string</em></td>
<td>商品标记，代金券或立减优惠功能的参数。</td>
</tr>
<tr>
<td>open_id 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的微信 
<code>open_id</code>
。</td>
</tr>
<tr>
<td>bank_type 
<em>response-only,string</em></td>
<td>支付完成后额外返回付款用户的付款银行类型 
<code>bank_type</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>wx_pub 微信公众号支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>limit_pay 
<em>optional,string</em></td>
<td>指定支付方式，指定不能使用信用卡支付可设置为 
<code>no_credit</code>
。</td>
</tr>
<tr>
<td>goods_tag 
<em>optional,string</em></td>
<td>商品标记，代金券或立减优惠功能的参数。</td>
</tr>
<tr>
<td>open_id 
<strong>required</strong>
 
<em>string</em></td>
<td>用户在商户 
<code>appid</code>
 下的唯一标识。</td>
</tr>
<tr>
<td>bank_type 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的付款银行类型 
<code>bank_type</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>wx_pub_qr 微信公众号扫码支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>limit_pay 
<em>optional,string</em></td>
<td>指定支付方式，指定不能使用信用卡支付可设置为 
<code>no_credit</code>
。</td>
</tr>
<tr>
<td>product_id 
<strong>required</strong>
 
<em>string</em></td>
<td>商品 ID，1-32 位字符串。此 id 为二维码中包含的商品 ID，商户自行维护。</td>
</tr>
<tr>
<td>goods_tag 
<em>optional,string</em></td>
<td>商品标记，代金券或立减优惠功能的参数。</td>
</tr>
<tr>
<td>open_id 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的微信 
<code>open_id</code>
。</td>
</tr>
<tr>
<td>bank_type 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的付款银行类型 
<code>bank_type</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>wx_wap 微信 WAP 支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>result_url 
<em>optional,string</em></td>
<td>支付完成的回调地址。</td>
</tr>
<tr>
<td>goods_tag 
<em>optional,string</em></td>
<td>商品标记，代金券或立减优惠功能的参数。</td>
</tr>
<tr>
<td>open_id 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的微信 
<code>open_id</code>
。</td>
</tr>
<tr>
<td>bank_type 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的付款银行类型 
<code>bank_type</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>wx_lite 微信小程序支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>limit_pay 
<em>optional,string</em></td>
<td>指定支付方式，指定不能使用信用卡支付可设置为 
<code>no_credit</code>
。</td>
</tr>
<tr>
<td>goods_tag 
<em>optional,string</em></td>
<td>商品标记，代金券或立减优惠功能的参数。</td>
</tr>
<tr>
<td>open_id 
<strong>required</strong>
 
<em>string</em></td>
<td>用户在商户 
<code>appid</code>
 下的唯一标识。</td>
</tr>
<tr>
<td>bank_type 
<em>response-only, string</em></td>
<td>支付完成后额外返回付款用户的付款银行类型 
<code>bank_type</code>
。</td>
</tr>
</tbody>
</table>
<p><strong>yeepay_wap 易宝手机网页支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>product_category 
<strong>required</strong>
 
<em>string</em></td>
<td>商品类别码，详见 
<a href="#%E6%98%93%E5%AE%9D%E6%94%AF%E4%BB%98%E5%95%86%E5%93%81%E7%B1%BB%E5%9E%8B%E7%A0%81">易宝支付商品类型码</a>
。</td>
</tr>
<tr>
<td>identity_id 
<strong>required</strong>
 
<em>string</em></td>
<td>用户标识,商户生成的用户账号唯一标识，最长 50 位字符串。</td>
</tr>
<tr>
<td>identity_type 
<strong>required</strong>
 
<em>int</em></td>
<td>用户标识类型，详见 
<a href="#%E6%98%93%E5%AE%9D%E6%94%AF%E4%BB%98%E7%94%A8%E6%88%B7%E6%A0%87%E8%AF%86%E7%B1%BB%E5%9E%8B%E7%A0%81">易宝支付用户标识类型码</a>
。</td>
</tr>
<tr>
<td>terminal_type 
<strong>required</strong>
 
<em>int</em></td>
<td>终端类型，对应取值 0:IMEI, 1:MAC, 2:UUID, 3:other。</td>
</tr>
<tr>
<td>terminal_id 
<strong>required</strong>
 
<em>string</em></td>
<td>终端 ID。</td>
</tr>
<tr>
<td>user_ua 
<strong>required</strong>
 
<em>string</em></td>
<td>用户使用的移动终端的 UserAgent 信息。</td>
</tr>
<tr>
<td>result_url 
<strong>required</strong>
 
<em>string</em></td>
<td>前台通知地址。</td>
</tr>
</tbody>
</table>
<p><strong>jdpay_wap 京东手机网页支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>success_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付成功页面跳转路径。</td>
</tr>
<tr>
<td>fail_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付失败页面跳转路径。</td>
</tr>
<tr>
<td>token 
<em>optional,string</em></td>
<td>用户交易令牌，用于识别用户信息，支付成功后会调用 
<code>success_url</code>
 返回给商户。商户可以记录这个 
<code>token</code>
 值，当用户再次支付的时候传入该 
<code>token</code>
 ，用户无需再次输入银行卡信息，直接输入短信验证码进行支付。32 位字符串。</td>
</tr>
<tr>
<td>order_type 
<em>optional,tring</em></td>
<td>订单类型，值为0表示实物商品订单，值为 1 代表虚拟商品订单，该参数默认值为 0 。</td>
</tr>
<tr>
<td>is_mobile 
<em>optional,boolean</em></td>
<td>设置是否通过手机端发起支付，值为 
<code>true</code>
 时调用手机 h5 支付页面，值为 
<code>false</code>
 时调用 PC 端支付页面，该参数默认值为 
<code>true</code>
 。</td>
</tr>
<tr>
<td>user_type 
<em>optional,string</em></td>
<td>用户账号类型，取值只能为：BIZ。</td>
</tr>
<tr>
<td>user_id 
<em>optional,string</em></td>
<td>商户的用户账号。</td>
</tr>
</tbody>
</table>
<p><strong>注:</strong> 对于 <code>user_type</code>, <code>user_id</code> 参数，传参存在问题请参考 <a href="https://help.pingxx.com/article/1012535/">帮助中心</a>。</p>
<p><strong>fqlpay_wap 分期乐支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>c_merch_id 
<strong>required</strong>
 
<em>string</em></td>
<td>子商户编号，需要提交该订单商户的所属子商户编号。</td>
</tr>
<tr>
<td>return_url 
<em>optional,string</em></td>
<td>前端回调地址，交易完成跳转的链接，不能带自定义参数。</td>
</tr>
</tbody>
</table>
<p><strong>qgbc_wap 量化派支付</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>phone 
<strong>required</strong>
 
<em>string</em></td>
<td>手机号码。</td>
</tr>
<tr>
<td>term 
<em>optional</em>
 
<em>int</em></td>
<td>分期参数，0 代表不分期，1 代表分 3 期，2 代表分 6 期，3 代表分 9 期，4 代表分 12 期。</td>
</tr>
<tr>
<td>return_url 
<em>optional,string</em></td>
<td>交易完成跳转的地址。</td>
</tr>
<tr>
<td>activate_url 
<em>optional, string</em></td>
<td>账户激活中状态跳转链接。</td>
</tr>
<tr>
<td>has_header 
<em>optional,boolean</em></td>
<td>是否显示量化派页面顶部 header，即是否显示 H5 顶部标题栏，默认为 
<code>true</code>
 时显示。</td>
</tr>
</tbody>
</table>
<p><strong>cmb_wallet 招行一网通</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>result_url 
<strong>required</strong>
 
<em>string</em></td>
<td>支付完成的前端回调地址。</td>
</tr>
<tr>
<td>p_no 
<strong>required</strong>
 
<em>string</em></td>
<td>客户协议号，不超过 30 位的纯数字字符串。</td>
</tr>
<tr>
<td>seq 
<strong>required</strong>
 
<em>string</em></td>
<td>协议开通请求流水号，不超过 20 位的纯数字字符串，请保证系统内唯一。</td>
</tr>
<tr>
<td>m_uid 
<strong>required</strong>
 
<em>string</em></td>
<td>协议用户 ID，不超过 20 位的纯数字字符串。</td>
</tr>
<tr>
<td>mobile 
<strong>required</strong>
 
<em>string</em></td>
<td>协议手机号，11 位数字。</td>
</tr>
<tr>
<td>discount_amount 
<strong>response-only</strong>
 
<em>int</em></td>
<td>立减金额，支付完成的返回参数，单位为分。</td>
</tr>
</tbody>
</table>
<p><strong>注:</strong> 对于 <code>p_no</code>, <code>seq</code> , <code>m_uid</code> , <code>mobile</code> 这几个参数：
1. 这几个参数是用户自定义的。
2. 对于同一个终端用户每次请求 <code>charge</code> 务必使用同一套参数（确保每个参数都不变），任意参数变更都会导致用户重新签约，同一个用户和招行重新签约的次数有限制，超限制就会无法签约 ，导致用户无法使用。</p>
<p><strong>mmdpay_wap 么么贷</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>phone 
<strong>required</strong>
 
<em>string</em></td>
<td>手机号。</td>
</tr>
<tr>
<td>id_no 
<strong>required</strong>
 
<em>string</em></td>
<td>身份证号。</td>
</tr>
<tr>
<td>name 
<strong>required</strong>
 
<em>string</em></td>
<td>真实姓名。</td>
</tr>
</tbody>
</table>
<p><strong>qpay QQ 钱包</strong></p>
<table>
<thead>
<tr>
<th>extra 参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>device 
<strong>required</strong>
 
<em>string</em></td>
<td>客户端设备类型，取值范围: "ios" ，"android"。</td>
</tr>
</tbody>
</table>
</div></div><div data-title="企业付款 extra 参数说明" class="keyline-top section contain clearfix " data-reactid="167"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="168"><h2 id="企业付款-extra-参数说明">企业付款 extra 参数说明</h2>
<p><strong>wx_pub 微信公众号支付</strong></p>
<table>
<thead>
<tr>
<th>extra参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>user_name 
<em>optional,string</em></td>
<td>收款人姓名。当该参数为空，则不校验收款人姓名。</td>
</tr>
<tr>
<td>force_check  
<em>optional,boolean</em></td>
<td>是否强制校验收款人姓名。仅当 
<code>user_name</code>
 参数不为空时该参数生效。</td>
</tr>
</tbody>
</table>
<p><strong>unionpay 企业付款（银行卡）</strong></p>
<table>
<thead>
<tr>
<th>extra参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>card_number 
<strong>required</strong>
 
<em>string</em></td>
<td>1~32位，收款人银行卡号或者存折号。</td>
</tr>
<tr>
<td>user_name 
<strong>required</strong>
 
<em>string</em></td>
<td>1~100位，收款人姓名。</td>
</tr>
<tr>
<td>open_bank_code 
<em>optional,string</em></td>
<td>4位，开户银行编号，详情请参考
<a href="#%E9%93%B6%E8%A1%8C%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">企业付款（银行卡）银行编号说明</a>
。</td>
</tr>
<tr>
<td>open_bank 
<em>optional,string</em></td>
<td>1~50位，开户银行。</td>
</tr>
<tr>
<td>prov 
<em>optional,string</em></td>
<td>1～20位，省份。</td>
</tr>
<tr>
<td>city 
<em>optional,string</em></td>
<td>1～40位，城市。</td>
</tr>
<tr>
<td>sub_bank 
<em>optional,string</em></td>
<td>1～80位，开户支行名称。</td>
</tr>
</tbody>
</table>
<p><strong>注</strong>：<code>open_bank_code</code> 和 <code>open_bank</code> 两个参数必传一个，建议使用 <code>open_bank_code</code> ，若都传参则优先使用 <code>open_bank_code</code> 读取规则；<code>prov</code> 和 <code>city</code> 均为可选参数，如果不传参，则使用默认值 "上海" 给渠道接口。</p>
</div></div><div data-title="易宝支付商品类型码" class="keyline-top section contain clearfix " data-reactid="169"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="170"><h2 id="易宝支付商品类型码">易宝支付商品类型码</h2>
<table>
<thead>
<tr>
<th>商品类别码</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>虚拟产品</td>
</tr>
<tr>
<td>3</td>
<td>公共事业缴费</td>
</tr>
<tr>
<td>4</td>
<td>手机充值</td>
</tr>
<tr>
<td>6</td>
<td>公益事业</td>
</tr>
<tr>
<td>7</td>
<td>实物电商</td>
</tr>
<tr>
<td>8</td>
<td>彩票业务</td>
</tr>
<tr>
<td>10</td>
<td>行政教育</td>
</tr>
<tr>
<td>11</td>
<td>线下服务业</td>
</tr>
<tr>
<td>13</td>
<td>微信实物电商</td>
</tr>
<tr>
<td>14</td>
<td>微信虚拟电商</td>
</tr>
<tr>
<td>15</td>
<td>保险行业</td>
</tr>
<tr>
<td>16</td>
<td>基金行业</td>
</tr>
<tr>
<td>17</td>
<td>电子票务</td>
</tr>
<tr>
<td>18</td>
<td>金融投资</td>
</tr>
<tr>
<td>19</td>
<td>大额支付</td>
</tr>
<tr>
<td>20</td>
<td>其他</td>
</tr>
<tr>
<td>21</td>
<td>旅游机票</td>
</tr>
<tr>
<td>22</td>
<td>畅付 D</td>
</tr>
</tbody>
</table>
</div></div><div data-title="易宝支付用户标识类型码" class="keyline-top section contain clearfix " data-reactid="171"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="172"><h2 id="易宝支付用户标识类型码">易宝支付用户标识类型码</h2>
<table>
<thead>
<tr>
<th>代码</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>0	
<strong>IMEI</strong></td>
<td>国际移动设备身份码的缩写，国际移动装备辨识码，是由 15 位数字组成的"电子串号"，它与每台手机一一对应。</td>
</tr>
<tr>
<td>1	
<strong>MAC 地址</strong></td>
<td>MAC(Media Access Control)地址，或称为 MAC 位址、硬件位址，用来定义网络设备的位置。在 OSI 模型中，第三层网络层负责 IP 地址，第二层数据链路层则负责 MAC 位址。因此一个主机会有一个 IP 地址，而每个网络位置会有一个专属于它的 MAC 位址。</td>
</tr>
<tr>
<td>2	
<strong>用户 ID</strong></td>
<td>用户编号。</td>
</tr>
<tr>
<td>3	
<strong>用户 Email	</strong></td>
<td></td>
</tr>
<tr>
<td>4	
<strong>用户手机号</strong></td>
<td></td>
</tr>
<tr>
<td>5	
<strong>用户身份证号</strong></td>
<td></td>
</tr>
<tr>
<td>6	
<strong>用户纸质订单协议号</strong></td>
<td></td>
</tr>
</tbody>
</table>
</div></div><div data-title="银行编号说明" class="keyline-top section contain clearfix " data-reactid="173"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="174"><h2 id="银行编号说明">银行编号说明</h2>
<table>
<thead>
<tr>
<th>open_bank_code</th>
<th>open_bank</th>
</tr>
</thead>
<tbody>
<tr>
<td>0100</td>
<td>中国邮政储蓄银行</td>
</tr>
<tr>
<td>0102</td>
<td>工商银行</td>
</tr>
<tr>
<td>0103</td>
<td>农业银行</td>
</tr>
<tr>
<td>0104</td>
<td>中国银行</td>
</tr>
<tr>
<td>0105</td>
<td>建设银行</td>
</tr>
<tr>
<td>0301</td>
<td>交通银行</td>
</tr>
<tr>
<td>0302</td>
<td>中信银行</td>
</tr>
<tr>
<td>0303</td>
<td>光大银行</td>
</tr>
<tr>
<td>0304</td>
<td>华夏银行</td>
</tr>
<tr>
<td>0305</td>
<td>民生银行</td>
</tr>
<tr>
<td>0306</td>
<td>广发银行</td>
</tr>
<tr>
<td>0308</td>
<td>招商银行</td>
</tr>
<tr>
<td>0309</td>
<td>兴业银行</td>
</tr>
<tr>
<td>0310</td>
<td>浦发银行</td>
</tr>
<tr>
<td>0311</td>
<td>恒丰银行</td>
</tr>
<tr>
<td>0313</td>
<td>临沂市商业银行</td>
</tr>
<tr>
<td>0316</td>
<td>浙商银行</td>
</tr>
<tr>
<td>0317</td>
<td>渤海银行</td>
</tr>
<tr>
<td>0318</td>
<td>平安银行</td>
</tr>
<tr>
<td>0328</td>
<td>新韩银行(中国)</td>
</tr>
<tr>
<td>0329</td>
<td>韩亚银行(中国)</td>
</tr>
<tr>
<td>0336</td>
<td>企业银行</td>
</tr>
<tr>
<td>0401</td>
<td>上海银行</td>
</tr>
<tr>
<td>0402</td>
<td>厦门银行</td>
</tr>
<tr>
<td>0403</td>
<td>北京银行</td>
</tr>
<tr>
<td>0404</td>
<td>烟台市商业银行</td>
</tr>
<tr>
<td>0405</td>
<td>福建海峡银行</td>
</tr>
<tr>
<td>0406</td>
<td>吉林银行</td>
</tr>
<tr>
<td>0408</td>
<td>宁波银行</td>
</tr>
<tr>
<td>0412</td>
<td>温州银行</td>
</tr>
<tr>
<td>0413</td>
<td>广州银行</td>
</tr>
<tr>
<td>0414</td>
<td>汉口银行</td>
</tr>
<tr>
<td>0418</td>
<td>洛阳银行</td>
</tr>
<tr>
<td>0420</td>
<td>大连银行</td>
</tr>
<tr>
<td>0422</td>
<td>河北银行</td>
</tr>
<tr>
<td>0423</td>
<td>杭州商业银行</td>
</tr>
<tr>
<td>0424</td>
<td>南京银行</td>
</tr>
<tr>
<td>0427</td>
<td>乌鲁木齐市商业银行</td>
</tr>
<tr>
<td>0428</td>
<td>绍兴银行</td>
</tr>
<tr>
<td>0433</td>
<td>葫芦岛市商业银行</td>
</tr>
<tr>
<td>0434</td>
<td>天津银行</td>
</tr>
<tr>
<td>0435</td>
<td>郑州银行</td>
</tr>
<tr>
<td>0436</td>
<td>宁夏银行</td>
</tr>
<tr>
<td>0438</td>
<td>齐商银行</td>
</tr>
<tr>
<td>0439</td>
<td>锦州银行</td>
</tr>
<tr>
<td>0440</td>
<td>徽商银行</td>
</tr>
<tr>
<td>0441</td>
<td>重庆银行</td>
</tr>
<tr>
<td>0442</td>
<td>哈尔滨银行</td>
</tr>
<tr>
<td>0443</td>
<td>贵阳银行</td>
</tr>
<tr>
<td>0447</td>
<td>兰州银行</td>
</tr>
<tr>
<td>0448</td>
<td>南昌银行</td>
</tr>
<tr>
<td>0449</td>
<td>晋商银行</td>
</tr>
<tr>
<td>0450</td>
<td>青岛银行</td>
</tr>
<tr>
<td>0455</td>
<td>日照市商业银行</td>
</tr>
<tr>
<td>0456</td>
<td>鞍山银行</td>
</tr>
<tr>
<td>0458</td>
<td>青海银行</td>
</tr>
<tr>
<td>0459</td>
<td>台州银行</td>
</tr>
<tr>
<td>0461</td>
<td>长沙银行</td>
</tr>
<tr>
<td>0463</td>
<td>赣州银行</td>
</tr>
<tr>
<td>0465</td>
<td>营口银行</td>
</tr>
<tr>
<td>0467</td>
<td>阜新银行</td>
</tr>
<tr>
<td>0474</td>
<td>内蒙古银行</td>
</tr>
<tr>
<td>0475</td>
<td>湖州市商业银行</td>
</tr>
<tr>
<td>0476</td>
<td>沧州银行</td>
</tr>
<tr>
<td>0479</td>
<td>包商银行</td>
</tr>
<tr>
<td>0481</td>
<td>威海商业银行</td>
</tr>
<tr>
<td>0483</td>
<td>攀枝花市商业银行</td>
</tr>
<tr>
<td>0485</td>
<td>绵阳市商业银行</td>
</tr>
<tr>
<td>0490</td>
<td>张家口市商业银行</td>
</tr>
<tr>
<td>0492</td>
<td>龙江银行</td>
</tr>
<tr>
<td>0495</td>
<td>柳州银行</td>
</tr>
<tr>
<td>0497</td>
<td>莱商银行</td>
</tr>
<tr>
<td>0498</td>
<td>德阳银行</td>
</tr>
<tr>
<td>0503</td>
<td>晋城银行</td>
</tr>
<tr>
<td>0505</td>
<td>东莞商行</td>
</tr>
<tr>
<td>0508</td>
<td>江苏银行</td>
</tr>
<tr>
<td>0513</td>
<td>承德市商业银行</td>
</tr>
<tr>
<td>0515</td>
<td>德州银行</td>
</tr>
<tr>
<td>0517</td>
<td>邯郸市商业银行</td>
</tr>
<tr>
<td>0525</td>
<td>浙江民泰商业银行</td>
</tr>
<tr>
<td>0526</td>
<td>上饶市商业银行</td>
</tr>
<tr>
<td>0527</td>
<td>东营银行</td>
</tr>
<tr>
<td>0528</td>
<td>泰安市商业银行</td>
</tr>
<tr>
<td>0530</td>
<td>浙江稠州商业银行</td>
</tr>
<tr>
<td>0534</td>
<td>鄂尔多斯银行</td>
</tr>
<tr>
<td>0537</td>
<td>济宁银行</td>
</tr>
<tr>
<td>0547</td>
<td>昆仑银行</td>
</tr>
<tr>
<td>0554</td>
<td>邢台银行</td>
</tr>
<tr>
<td>0556</td>
<td>漯河商行</td>
</tr>
<tr>
<td>1401</td>
<td>上海农商银行</td>
</tr>
<tr>
<td>1402</td>
<td>昆山农信社</td>
</tr>
<tr>
<td>1403</td>
<td>常熟市农村商业银行</td>
</tr>
<tr>
<td>1404</td>
<td>深圳农村商业银行</td>
</tr>
<tr>
<td>1405</td>
<td>广州农村商业银行</td>
</tr>
<tr>
<td>1408</td>
<td>佛山顺德农村商业银行</td>
</tr>
<tr>
<td>1409</td>
<td>昆明农村信用社联合社</td>
</tr>
<tr>
<td>1410</td>
<td>湖北农信社</td>
</tr>
<tr>
<td>1415</td>
<td>东莞农村商业银行</td>
</tr>
<tr>
<td>1416</td>
<td>张家港农村商业银行</td>
</tr>
<tr>
<td>1417</td>
<td>福建省农村信用社联合社</td>
</tr>
<tr>
<td>1418</td>
<td>北京农村商业银行</td>
</tr>
<tr>
<td>1419</td>
<td>天津农村商业银行</td>
</tr>
<tr>
<td>1420</td>
<td>宁波鄞州农村合作银行</td>
</tr>
<tr>
<td>1424</td>
<td>江苏省农村信用社联合社</td>
</tr>
<tr>
<td>1428</td>
<td>江苏吴江农村商业银行</td>
</tr>
<tr>
<td>1430</td>
<td>苏州银行</td>
</tr>
<tr>
<td>1443</td>
<td>广西农村信用社联合社</td>
</tr>
<tr>
<td>1446</td>
<td>黄河农村商业银行</td>
</tr>
<tr>
<td>1447</td>
<td>安徽省农村信用社联合社</td>
</tr>
<tr>
<td>1448</td>
<td>海南省农村信用社联合社</td>
</tr>
<tr>
<td>1513</td>
<td>重庆农村商业银行</td>
</tr>
<tr>
<td>6462</td>
<td>潍坊市商业银行</td>
</tr>
<tr>
<td>6466</td>
<td>富滇银行</td>
</tr>
<tr>
<td>6473</td>
<td>浙江泰隆商业银行</td>
</tr>
<tr>
<td>6478</td>
<td>广西北部湾银行</td>
</tr>
<tr>
<td>6567</td>
<td>商丘商行</td>
</tr>
</tbody>
</table>
</div></div><div data-title="认证接口 result_code 说明" class="keyline-top section contain clearfix " data-reactid="175"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="176"><h2 id="认证接口-result_code-说明">认证接口 result_code 说明</h2>
<table>
<thead>
<tr>
<th>返回码</th>
<th>返回信息</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>成功</td>
</tr>
<tr>
<td>2001</td>
<td>调用第三方接口失败</td>
</tr>
<tr>
<td>2003</td>
<td>扣费失败</td>
</tr>
<tr>
<td>3200</td>
<td>无效的商户号</td>
</tr>
<tr>
<td>3204</td>
<td>无效的sessionId</td>
</tr>
<tr>
<td>3300</td>
<td>商户号未找到</td>
</tr>
<tr>
<td>3303</td>
<td>商户号与服务访问账号不匹配</td>
</tr>
<tr>
<td>3420</td>
<td>请求参数不合法</td>
</tr>
<tr>
<td>3431</td>
<td>身份证信息不匹配</td>
</tr>
<tr>
<td>3432</td>
<td>身份证信息匹配失败</td>
</tr>
<tr>
<td>3433</td>
<td>身份验证活体照片非法</td>
</tr>
<tr>
<td>3434</td>
<td>身份验证上传登记照失败</td>
</tr>
<tr>
<td>3435</td>
<td>身份验证照片比对失败</td>
</tr>
<tr>
<td>3441</td>
<td>银行卡信息认证失败</td>
</tr>
<tr>
<td>3442</td>
<td>银行卡信息认证请求异常</td>
</tr>
<tr>
<td>3443</td>
<td>银行卡信息认证请求超时</td>
</tr>
<tr>
<td>3451</td>
<td>银行卡信息认证校验失败</td>
</tr>
<tr>
<td>3452</td>
<td>银行卡信息认证校验异常</td>
</tr>
</tbody>
</table>
</div></div><div data-title="海关编号说明" class="keyline-top section contain clearfix " data-reactid="177"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="178"><h2 id="海关编号说明">海关编号说明</h2>
<p>表一 微信海关编号说明</p>
<table>
<thead>
<tr>
<th>海关编号</th>
<th>参数意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>GUANGZHOU</td>
<td>广州海关</td>
</tr>
<tr>
<td>HANGZHOU</td>
<td>杭州海关</td>
</tr>
<tr>
<td>NINGBO</td>
<td>宁波海关</td>
</tr>
<tr>
<td>SHANGHAI</td>
<td>上海海关</td>
</tr>
<tr>
<td>ZHENGZHOU_BS</td>
<td>郑州海关(保税物流中心)</td>
</tr>
<tr>
<td>ZHENGZHOU_ZH</td>
<td>郑州海关(综合保税区)</td>
</tr>
<tr>
<td>CHONGQING</td>
<td>重庆海关</td>
</tr>
</tbody>
</table>
<p>表二 支付宝海关编号说明</p>
<table>
<thead>
<tr>
<th>海关编号</th>
<th>参数意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>HANGZHOU</td>
<td>杭州海关</td>
</tr>
<tr>
<td>ZHENGZHOU</td>
<td>郑州海关</td>
</tr>
<tr>
<td>GUANGZHOU</td>
<td>广州海关</td>
</tr>
<tr>
<td>CHONGQING</td>
<td>重庆海关</td>
</tr>
<tr>
<td>NINGBO</td>
<td>宁波海关</td>
</tr>
<tr>
<td>SHENZHEN</td>
<td>深圳海关</td>
</tr>
<tr>
<td>HENAN</td>
<td>河南海关</td>
</tr>
<tr>
<td>SHANGHAI</td>
<td>上海海关</td>
</tr>
<tr>
<td>XIAN</td>
<td>西安海关</td>
</tr>
<tr>
<td>FUJIAN</td>
<td>福建海关</td>
</tr>
<tr>
<td>TIANJIN</td>
<td>天津海关</td>
</tr>
<tr>
<td>NANSHAGJ</td>
<td>南沙国检</td>
</tr>
<tr>
<td>ZONGSHU</td>
<td>海关总署</td>
</tr>
</tbody>
</table>
<p>表三 银联海关编号说明</p>
<table>
<thead>
<tr>
<th>海关编号</th>
<th>参数意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>ZONGSHU</td>
<td>海关总署</td>
</tr>
<tr>
<td>SHENZHEN</td>
<td>深圳海关</td>
</tr>
<tr>
<td>NINGBO</td>
<td>宁波海关</td>
</tr>
<tr>
<td>GUANGZHOU</td>
<td>广州海关</td>
</tr>
<tr>
<td>NANJING</td>
<td>广州海关</td>
</tr>
<tr>
<td>HANGZHOU</td>
<td>杭州海关</td>
</tr>
<tr>
<td>ZHENGZHOU</td>
<td>郑州海关</td>
</tr>
<tr>
<td>CHONGQING</td>
<td>重庆海关</td>
</tr>
<tr>
<td>XIAN</td>
<td>西安海关</td>
</tr>
<tr>
<td>PINGTAN</td>
<td>福建（平潭）海关</td>
</tr>
</tbody>
</table>
<hr>
</div></div><div data-title="API 更新日志" class="keyline-top section contain clearfix " data-reactid="179"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="180"><h2 id="api-更新日志">API 更新日志</h2>
<hr>
</div></div><div data-title="2017-02-15" class="keyline-top section contain clearfix " data-reactid="181"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="182"><h3 id="2017-02-15">2017-02-15</h3>
<ol>
<li>新增 <code>customs.succeeded</code> 和 <code>batch_refund.succeeded</code> 两个 Event 事件类型和对应 <code>Event</code> 回调对象示例，详情请参考<a href="#event-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B">API文档</a>。</li>
<li>修改支付宝即时到账渠道名为支付宝电脑网站支付，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">API文档</a>。</li>
<li>修改报关接口说明，添加请求接口说明文档中对 <code>applepay_upacp</code> 渠道的支持，详情请参考<a href="#%E8%AF%B7%E6%B1%82%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
</ol>
</div></div><div data-title="2017-02-08" class="keyline-top section contain clearfix " data-reactid="183"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="184"><h3 id="2017-02-08">2017-02-08</h3>
<ol>
<li>修改 Transfers 企业付款 <code>description</code> 参数说明，查询 Trasnfer 对象列表 <code>limit</code> 参数说明，详情请参考<a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>修改 Events 事件类型 summary 类型事件触发时间，详情请参考<a href="#event-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B">API文档</a>。</li>
<li>新增 辅助接口、Transfer 对应 <code>unionpay</code> 渠道 API 验签方式说明，详情请参考<a href="#%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%BF%A1%E6%81%AF%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>调整部分文档格式。</li>
</ol>
</div></div><div data-title="2017-01-12" class="keyline-top section contain clearfix " data-reactid="185"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="186"><h3 id="2017-01-12">2017-01-12</h3>
<ol>
<li>修改报关接口说明文档，去掉不支持拆单的文字描述，新增 <code>trade_no</code> 字段说明，详情请参考<a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>新增银联全渠道返回参数 <code>pay_type</code>、<code>acc_no</code>、<code>pay_card_type</code>，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">API文档</a>。</li>
<li>新增创建 Red Envelope 对象的 <code>extra</code> 参数 <code>scene_id</code>，详情请参考<a href="#%E5%88%9B%E5%BB%BA-red-envelope-%E5%AF%B9%E8%B1%A1">API文档</a>。</li>
<li>新增微信小程序支付渠道 wx_lite ，并添加渠道 extra 参数，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">API文档</a>。</li>
<li>新增 jdpay_wap 京东手机网页支付渠道的 <code>extra</code> 参数，添加可选参数 <code>user_type</code>、<code>user_id</code>，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-12-28" class="keyline-top section contain clearfix " data-reactid="187"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="188"><h3 id="2016-12-28">2016-12-28</h3>
<ol>
<li>修改请求报关接口 <code>curl</code> 示例，添加请求内容中的 <code>apikey</code> ，添加对应 <code>php</code>、<code>go</code>、<code>python</code>示例文档 ，详情请参考<a href="#%E8%AF%B7%E6%B1%82%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>添加批量企业付款接口对应 <code>php</code>、<code>go</code>、<code>java</code> 示例文档，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>添加批量退款接口对应 <code>php</code>、<code>go</code> 示例文档，详情请参考<a href="#batch-refunds-%E6%89%B9%E9%87%8F%E9%80%80%E6%AC%BE">API文档</a>。</li>
<li>添加身份认证接口对应 <code>go</code> 示例文档，详情请参考<a href="#%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%BF%A1%E6%81%AF%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>修改退款接口对应 <code>java</code> 示例文档，详情请参考<a href="#%E5%88%9B%E5%BB%BA-refund-%E5%AF%B9%E8%B1%A1">API文档</a>。</li>
<li>修改批量退款接口 <code>per_page</code> 默认值为 10 ，详情请参考<a href="#%E6%9F%A5%E8%AF%A2-batch-refund-%E5%AF%B9%E8%B1%A1%E5%88%97%E8%A1%A8">API文档</a>。</li>
<li>修改批量企业付款请求接口 <code>per_page</code> 默认值为 10 ，详情请参考<a href="#%E6%9F%A5%E8%AF%A2-batch-transfer-%E5%AF%B9%E8%B1%A1%E5%88%97%E8%A1%A8">API文档</a>。</li>
<li>添加支付、批量退款、红包、企业付款、批量企业付款对应查询列表对象接口文档示例，新增请求示例中的 <code>expand[]=app</code>。</li>
<li>修正红包请求接口中 <code>metadata</code> 字段为可选，详情请参考<a href="#%E5%88%9B%E5%BB%BA-red-envelope-%E5%AF%B9%E8%B1%A1">API文档</a>。</li>
<li>修正支付宝电脑网站支付渠道对应 <code>extra</code> 参数，添加返回参数 <code>buyer_account</code>，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">API文档</a>。</li>
<li>调整文档格式，标题栏所有对象名首字母大写。</li>
</ol>
</div></div><div data-title="2016-11-30" class="keyline-top section contain clearfix " data-reactid="189"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="190"><h3 id="2016-11-30">2016-11-30</h3>
<ol>
<li>新增批量企业付款到银行卡接口，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>新增批量退款查询列表接口请求示例部分的验签示例，详情请参考<a href="#%E6%9F%A5%E8%AF%A2-batch-refund-%E5%AF%B9%E8%B1%A1%E5%88%97%E8%A1%A8">API文档</a>。</li>
<li>下线 Event 对象列表查询接口。</li>
</ol>
</div></div><div data-title="2016-11-23" class="keyline-top section contain clearfix " data-reactid="191"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="192"><h3 id="2016-11-23">2016-11-23</h3>
<ol>
<li>下线应用内快捷支付相关说明文档和示例。</li>
</ol>
</div></div><div data-title="2016-11-16" class="keyline-top section contain clearfix " data-reactid="193"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="194"><h3 id="2016-11-16">2016-11-16</h3>
<ol>
<li>新增 <code>metadata</code> 可选字段 <code>phone_number</code>，更新对应语言请求和返回示例，详情请参考<a href="#%E5%85%83%E6%95%B0%E6%8D%AE">API文档</a>。</li>
<li>更新 Node.js SDK 批量企业付款接口，详情请参考<a href="?language=Node.js#%E5%88%9B%E5%BB%BA-batch-transfer-%E5%AF%B9%E8%B1%A1">API文档</a>。</li>
<li>修改 API 更新日志中批量企业付款链接部分错误，详情请参考<a href="#api-%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-11-09" class="keyline-top section contain clearfix " data-reactid="195"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="196"><h3 id="2016-11-09">2016-11-09</h3>
<ol>
<li>调整标题"回调"为"Webhooks 回调"，新增相关 Webhooks 通知说明，详情请参考<a href="#events-%E4%BA%8B%E4%BB%B6">API文档</a>。</li>
<li>修改报关接口部分参数问题，详情请参考<a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>新增批量企业付款单次请求的企业付款订单数量限制，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-11-02" class="keyline-top section contain clearfix " data-reactid="197"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="198"><h3 id="2016-11-02">2016-11-02</h3>
<ol>
<li>修改文档中"批量付款"为"批量企业付款"，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>调整文档中<code>交易</code>部分的目录结构顺序，详情请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
<li>修改批量退款 和 批量企业付款部分文档示例，修改<code>batch_no</code>字段说明，允许字母和英文，详情请参考<a href="#batch-refunds-%E6%89%B9%E9%87%8F%E9%80%80%E6%AC%BE">API文档</a>。</li>
<li>修改支付渠道属性值，补充各渠道支付场景，详情请参考<a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93%E5%B1%9E%E6%80%A7%E5%80%BC">API文档</a>。</li>
<li>新增更新 Transfer 接口 Node.js SDK 请求示例，详情请参考<a href="?language=Node.js#%E6%9B%B4%E6%96%B0-transfer%E5%AF%B9%E8%B1%A1">API文档</a>。 </li>
</ol>
</div></div><div data-title="2016-10-19" class="keyline-top section contain clearfix " data-reactid="199"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="200"><h3 id="2016-10-19">2016-10-19</h3>
<ol>
<li>新增 QQ 钱包渠道说明文档，详情请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
<li>新增 微信渠道退款字段 <code>funding_source</code>，详情请参考<a href="#refunds-%E9%80%80%E6%AC%BE">API文档</a>。</li>
<li>修改 <code>Batch Transfers</code> 批量企业付款接口说明，去掉 <code>transaction_no</code> 字段，修改部分示例代码，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>修改 企业付款（银行卡）渠道 <code>order_no</code> 字段说明，只支持 1～16 位纯数字，详情请参考<a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-10-10" class="keyline-top section contain clearfix " data-reactid="201"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="202"><h3 id="2016-10-10">2016-10-10</h3>
<ol>
<li>新增身份认证 Java SDK请求示例，详情请参考<a href="?language=Java#%E8%AF%B7%E6%B1%82%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>新增 <code>Batch Transfers</code> 批量企业付款接口，详情请参考<a href="#batch-transfers-%E6%89%B9%E9%87%8F%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>修改 <code>Batch Refunds</code> 批量退款接口查询列表强制验签说明，详情请参考<a href="#batch-refunds-%E6%89%B9%E9%87%8F%E9%80%80%E6%AC%BE">API文档</a>。</li>
<li>新增 <code>batch_transfer.succeeded</code> 批量企业付款 <code>event</code> 事件和事例说明，详情请参考<a href="#event-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-09-20" class="keyline-top section contain clearfix " data-reactid="203"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="204"><h3 id="2016-09-20">2016-09-20</h3>
<ol>
<li>招行一网通渠道修改 <code>extra</code> 参数说明备注，详情请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
<li>新增 <code>applepay_upacp</code> 渠道报关文档说明，详情请参考<a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>修改企业付款和红包接口的文档，不再支持 <code>wx</code> 渠道的企业付款和红包，详情请参考<a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">Transfers 企业付款</a>和<a href="#red-envelopes-%E7%BA%A2%E5%8C%85">Red envelopes 红包</a>。</li>
</ol>
</div></div><div data-title="2016-09-07" class="keyline-top section contain clearfix " data-reactid="205"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="206"><h3 id="2016-09-07">2016-09-07</h3>
<ol>
<li>新增银联报关接口，修改原支付宝，微信报关接口参数，接入规则请参考<a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>新增招行一网通渠道返回参数，<code>extra</code> 中新增优惠金额参数 <code>discount_amount</code>，接入规则请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-08-24" class="keyline-top section contain clearfix " data-reactid="207"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="208"><h3 id="2016-08-24">2016-08-24</h3>
<ol>
<li>新增支付宝批量退款接口，接入规则请参考<a href="#batch-refunds-%E6%89%B9%E9%87%8F%E9%80%80%E6%AC%BE">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-08-17" class="keyline-top section contain clearfix " data-reactid="209"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="210"><h3 id="2016-08-17">2016-08-17</h3>
<ol>
<li>更新企业付款（银行卡）渠道参数：新增extra字段 <code>open_bank_code</code> 参数，修改 <code>open_bank</code>，<code>prov</code>，<code>city</code> 参数为optional，新增该渠道接口调用注意点，接入规则请参考<a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API文档</a>。</li>
<li>新增企业付款（银行卡）银行编号附录，接入规则请参考<a href="#%E9%93%B6%E8%A1%8C%E7%BC%96%E5%8F%B7%E8%AF%B4%E6%98%8E">API文档</a>。</li>
<li>修改 <code>wx_wap</code> 渠道extra字段：去掉 <code>limit_pay</code> 参数，新增 <code>result_url</code> 参数，接入规则请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。 </li>
</ol>
</div></div><div data-title="2016-08-10" class="keyline-top section contain clearfix " data-reactid="211"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="212"><h3 id="2016-08-10">2016-08-10</h3>
<ol>
<li>新增支付渠道：么么贷 <code>mmdpay_wap</code>，接入规则请参考 <a href="#charges-%E6%94%AF%E4%BB%98">API 文档</a>。</li>
<li>添加 charge 对象 <code>time_paid</code> 说明：银联支付成功时间为接收异步通知的时间，请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-08-03" class="keyline-top section contain clearfix " data-reactid="213"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="214"><h3 id="2016-08-03">2016-08-03</h3>
<ol>
<li>新增 <code>alipay_wap</code> 渠道extra字段 <code>app_pay</code> 参数，用于判断是否使用支付宝客户端支付；修改 <code>cancel_url</code> 参数说明，当 <code>app_pay</code> 为true时，<code>cancel_url</code> 字段无效，接入规则参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
<li>修改招行一网通extra字段参数说明，<code>p_no</code>, <code>seq</code>, <code>m_uid</code>, <code>mobile</code> 这几个参数决定是否签约，传同样的参数，就不会重新签约,具体请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
<li>新增 <code>jdpay_wap</code> 渠道extra字段 <code>order_type</code> 和 <code>is_mobile</code> 参数，接入规则请参考<a href="#charges-%E6%94%AF%E4%BB%98">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-07-27" class="keyline-top section contain clearfix " data-reactid="215"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="216"><h3 id="2016-07-27">2016-07-27</h3>
<ol>
<li>身份证银行卡信息认证接口更新phone_number参数，添加说明：暂不支持178开头的手机号，请参考<a href="#%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%BF%A1%E6%81%AF%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
<li>身份证银行卡信息认证接口添加php，ruby对应SDK请求示例和返回示例，接入规则请参考<a href="#%E8%AF%B7%E6%B1%82%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-07-20" class="keyline-top section contain clearfix " data-reactid="217"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="218"><h3 id="2016-07-20">2016-07-20</h3>
<ol>
<li>新增 <strong>更新 Transfer 对象接口</strong>：接入规则请参考<a href="#%E6%9B%B4%E6%96%B0-transfer%E5%AF%B9%E8%B1%A1">API文档</a>；</li>
<li>修改 Customer 对象，Card 对象请求参数：添加<code>sms_code[id]</code> 和 <code>sms_code[code]</code> 参数,修改 Customer 对象 和 Card 对象请求示例，请参考<a href="#%E5%88%9B%E5%BB%BA-customer-%E5%AF%B9%E8%B1%A1">API文档</a>。</li>
</ol>
</div></div><div data-title="2016-07-13" class="keyline-top section contain clearfix " data-reactid="219"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="220"><h3 id="2016-07-13">2016-07-13</h3>
<ol>
<li>新增支付渠道： 微信WAP支付 <code>wx_wap</code> ，接入规则请参考 <a href="#charges-%E6%94%AF%E4%BB%98">API 文档</a>；使用该渠道，需更新客户端 SDK ，请参考 <a href="https://github.com/PingPlusPlus/pingpp-js">pingpp-js</a>；</li>
<li>修改 <strong>身份证银行卡信息认证接口</strong>参数：<code>app_id</code> 改成 <code>app</code>、<code>idcard</code> 改成 <code>id_card</code>、<code>bankcard</code> 改成 <code>bank_card</code>、<code>user_name</code> 改成 <code>id_name</code>，接入规则请参考 <a href="#%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%BF%A1%E6%81%AF%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API 文档</a>；</li>
<li>修改 <strong>报关接口</strong>参数：<code>app_id</code> 改成 <code>app</code>，接入规则请参考 <a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API 文档</a>。</li>
</ol>
</div></div><div data-title="2016-07-06" class="keyline-top section contain clearfix " data-reactid="221"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="222"><h3 id="2016-07-06">2016-07-06</h3>
<ol>
<li>新增 <strong>报关接口</strong>，接入规则请参考 <a href="#%E6%8A%A5%E5%85%B3%E6%8E%A5%E5%8F%A3">API 文档</a>；</li>
<li>新增 <strong>企业付款（银行卡）接口</strong>，接入规则请参考 <a href="#transfers-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE">API 文档</a>。</li>
</ol>
</div></div><div data-title="2016-06-30" class="keyline-top section contain clearfix " data-reactid="223"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="224"><h3 id="2016-06-30">2016-06-30</h3>
<ol>
<li>新增支付渠道： 招行一网通 <code>cmb_wallet</code> ，接入规则请参考 <a href="#charges-%E6%94%AF%E4%BB%98">API 文档</a> ；</li>
<li>新增 <strong>身份证银行卡信息认证接口</strong> ，接口规则请参考 <a href="#%E8%AF%B7%E6%B1%82%E8%AE%A4%E8%AF%81%E6%8E%A5%E5%8F%A3">API 文档</a>。</li>
</ol>
</div></div><div data-title="2016-06-22" class="keyline-top section contain clearfix " data-reactid="225"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="226"><h3 id="2016-06-22">2016-06-22</h3>
<p>退款 Refund 对象中增加商户订单号 <code>charge_order_no</code> 字段，请求退款之后会在返回的 Refund 中带回付款订单的商户订单号，详情参考 <a href="#refunds-%E9%80%80%E6%AC%BE">API 文档</a>。</p>
</div></div><div data-title="2016-06-16" class="keyline-top section contain clearfix " data-reactid="227"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="228"><h3 id="2016-06-16">2016-06-16</h3>
<p>升级支付宝手机网站（alipay_wap）支付接口，针对已经接入旧接口的用户请在 3 个月内更新成新接口。旧接口的用户更新只需要三步：</p>
<ul>
<li>更新客户端 <a href="https://github.com/PingPlusPlus/pingpp-js">H5 SDK</a>；</li>
<li>在服务端请求中增加额外的请求字段 <code>new_version</code> ，详细步骤请参照 <a href="https://help.pingxx.com/article/174737">alipay_wap 接口更新说明</a>；</li>
<li>更新 Ping++ 管理平台上的支付宝手机网站支付的渠道参数，更新成支付宝的 <strong>合作伙伴密钥</strong> 对应的参数，详情请参考<a href="https://help.pingxx.com/article/123325">帮助中心</a>；</li>
<li>更新到新接口之后，alipay_wap渠道的同步返回参数也会有相应的变更，具体内容请参考 <a href="https://help.pingxx.com/article/132329/">帮助中心</a>。</li>
</ul>
</div></div><div data-title="2016-05-18" class="keyline-top section contain clearfix " data-reactid="229"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="230"><h3 id="2016-05-18">2016-05-18</h3>
<p>红包接口和微信官方接口同步：下线 <code>extra</code> 参数中的 <code>nick_name</code>、<code>logo</code>、<code>share_url</code>、<code>share_content</code> 和 <code>share_img</code> 字段。兼容旧接口，已接入用户可忽略该变更；未接入用户请参考 <a href="#red-envelopes-%E7%BA%A2%E5%8C%85">API 文档</a> 进行接入。</p>
</div></div><div data-title="2016-04-27" class="keyline-top section contain clearfix " data-reactid="231"><div class="space-bottom8 col6 pad2x prose clip left-content" data-reactid="232"><h3 id="2016-04-27">2016-04-27</h3>
<ol>
<li>API－微信类接口增加 <code>goods_tag</code> 字段；具体使用方法请参见： <a href="#%E6%94%AF%E4%BB%98%E6%B8%A0%E9%81%93-extra-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">API 文档</a>；</li>
<li>API－支付宝电脑网站支付可选参数 <code>anti_phishing_key</code> 变更为 <code>enable_anti_phishing_key</code>，为布尔值，具体使用方法请参见： <a href="#%E5%88%9B%E5%BB%BA-charge-%E5%AF%B9%E8%B1%A1">API 文档</a>；</li>
<li>API－修复代理商 App 创建微信企业付款( transfer )时报错信息错误的问题；</li>
<li>API－修复红包在测试模式 <code>transaction_no</code> 值为 <code>null</code> 的问题。</li>
</ol>
</div></div></div></div></div><div class="fixed-top space-left20" data-reactid="233"><div class="events fill-blue dark bottom-shadow pad1 col6 pin-topright  " data-reactid="234"><div class="space-right1 small quiet inline" data-reactid="235"></div><div class="rounded-toggle inline short" data-reactid="236"><a class="strong active" data-reactid="237">cURL</a><a class="strong " data-reactid="238">PHP</a><a class="strong " data-reactid="239">Java</a><a class="strong " data-reactid="240">Ruby</a><a class="strong " data-reactid="241">Node</a><a class="strong " data-reactid="242">Python</a><a class="strong " data-reactid="243">Go</a><a class="strong " data-reactid="244">C#</a></div><div class="fr pad0" data-reactid="245"><a title="Display as 1 column" style="cursor:pointer;" class="icon quiet caret-left pad0 fill-lighten0 round" data-reactid="246"></a></div></div></div><div class="fill-light fixed-top header pad0 width20" data-reactid="247"><a href="/" class="logo" data-reactid="248">API</a></div></div></div><!--STOP-->
    <script src='api/bundle.js'></script>
  </body>
</html>
